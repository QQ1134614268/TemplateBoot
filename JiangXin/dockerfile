# 使用官方的 Maven 镜像作为基础镜像
FROM maven:3.6.3-jdk-8 AS build
# 将当前目录设置为工作目录
WORKDIR /app
# 将本地 Maven 项目的 pom.xml 和 src 目录复制到 Docker 容器的 /app 目录下
COPY pom.xml /app
COPY src /app/src
# 在 Docker 容器中构建 Maven 项目, maven.repo.local 默认为卷,其他容器会覆盖掉??, 利用docker缓存,避免重复下载; 参考 https://blog.csdn.net/LK_Lawliet/article/details/131950674
RUN mvn install -DskipTests -Dmaven.repo.local=./.m2

# 使用一个轻量级的 JDK 镜像作为基础镜像
FROM openjdk:8-jre-slim
# 设置工作目录
WORKDIR /app
RUN mkdir -p data/upload
RUN mkdir -p data/log
# 将 Maven 容器中的 target/*.jar 复制到 Docker 容器的 /app 目录下
COPY --from=build /app/target/*.jar /app/JiangxinServe.jar
# 暴露端口
EXPOSE 29090
# 在容器启动时运行 jar 包
CMD ["java", "-jar", "-Dactive=pro", "JiangxinServe.jar"]

# docker build -t jiangxin_serve:20240613 .
# docker run -d --name JiangxinServe -p 29090:29090 -v /app/jiangxin/data:/app/data jiangxin_serve:20240613
