
package org.onvif.ver10.device.wsdl;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.Duration;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.onvif.ver10.schema.AttachmentData;
import org.onvif.ver10.schema.BackupFile;
import org.onvif.ver10.schema.BinaryData;
import org.onvif.ver10.schema.Capabilities;
import org.onvif.ver10.schema.CapabilityCategory;
import org.onvif.ver10.schema.Certificate;
import org.onvif.ver10.schema.CertificateInformation;
import org.onvif.ver10.schema.CertificateStatus;
import org.onvif.ver10.schema.CertificateWithPrivateKey;
import org.onvif.ver10.schema.DNSInformation;
import org.onvif.ver10.schema.DateTime;
import org.onvif.ver10.schema.DiscoveryMode;
import org.onvif.ver10.schema.Dot11AvailableNetworks;
import org.onvif.ver10.schema.Dot11Status;
import org.onvif.ver10.schema.Dot1XConfiguration;
import org.onvif.ver10.schema.DynamicDNSInformation;
import org.onvif.ver10.schema.DynamicDNSType;
import org.onvif.ver10.schema.FactoryDefaultType;
import org.onvif.ver10.schema.HostnameInformation;
import org.onvif.ver10.schema.IPAddress;
import org.onvif.ver10.schema.IPAddressFilter;
import org.onvif.ver10.schema.IntRange;
import org.onvif.ver10.schema.LocationEntity;
import org.onvif.ver10.schema.NTPInformation;
import org.onvif.ver10.schema.NetworkGateway;
import org.onvif.ver10.schema.NetworkHost;
import org.onvif.ver10.schema.NetworkInterface;
import org.onvif.ver10.schema.NetworkInterfaceSetConfiguration;
import org.onvif.ver10.schema.NetworkProtocol;
import org.onvif.ver10.schema.NetworkZeroConfiguration;
import org.onvif.ver10.schema.RelayLogicalState;
import org.onvif.ver10.schema.RelayOutput;
import org.onvif.ver10.schema.RelayOutputSettings;
import org.onvif.ver10.schema.RemoteUser;
import org.onvif.ver10.schema.Scope;
import org.onvif.ver10.schema.SetDateTimeType;
import org.onvif.ver10.schema.SupportInformation;
import org.onvif.ver10.schema.SystemDateTime;
import org.onvif.ver10.schema.SystemLog;
import org.onvif.ver10.schema.SystemLogType;
import org.onvif.ver10.schema.SystemLogUriList;
import org.onvif.ver10.schema.TimeZone;
import org.onvif.ver10.schema.User;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Device", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
@XmlSeeAlso({
    org.onvif.ver10.device.wsdl.ObjectFactory.class,
    org.oasis_open.docs.wsn.b_2.ObjectFactory.class,
    org.oasis_open.docs.wsn.t_1.ObjectFactory.class,
    org.oasis_open.docs.wsrf.bf_2.ObjectFactory.class,
    org.onvif.ver10.schema.ObjectFactory.class,
    org.w3._2003._05.soap_envelope.ObjectFactory.class,
    org.w3._2004._08.xop.include.ObjectFactory.class,
    org.w3._2005._05.xmlmime.ObjectFactory.class,
    org.w3._2005._08.addressing.ObjectFactory.class
})
public interface Device {


    /**
     * Returns information about services on the device.
     * 
     * @param includeCapability
     * @return
     *     returns java.util.List<org.onvif.ver10.device.wsdl.Service>
     */
    @WebMethod(operationName = "GetServices", action = "http://www.onvif.org/ver10/device/wsdl/GetServices")
    @WebResult(name = "Service", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetServices", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetServices")
    @ResponseWrapper(localName = "GetServicesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetServicesResponse")
    public List<Service> getServices(
        @WebParam(name = "IncludeCapability", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean includeCapability);

    /**
     * Returns the capabilities of the device service. The result is returned in a typed
     *                 answer.
     *             
     * 
     * @return
     *     returns org.onvif.ver10.device.wsdl.DeviceServiceCapabilities
     */
    @WebMethod(operationName = "GetServiceCapabilities", action = "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities")
    @WebResult(name = "Capabilities", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetServiceCapabilities", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetServiceCapabilities")
    @ResponseWrapper(localName = "GetServiceCapabilitiesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetServiceCapabilitiesResponse")
    public DeviceServiceCapabilities getServiceCapabilities();

    /**
     * This operation gets basic device information from the device.
     * 
     * @param serialNumber
     * @param hardwareId
     * @param model
     * @param firmwareVersion
     * @param manufacturer
     */
    @WebMethod(operationName = "GetDeviceInformation", action = "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation")
    @RequestWrapper(localName = "GetDeviceInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDeviceInformation")
    @ResponseWrapper(localName = "GetDeviceInformationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDeviceInformationResponse")
    public void getDeviceInformation(
        @WebParam(name = "Manufacturer", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<String> manufacturer,
        @WebParam(name = "Model", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<String> model,
        @WebParam(name = "FirmwareVersion", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<String> firmwareVersion,
        @WebParam(name = "SerialNumber", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<String> serialNumber,
        @WebParam(name = "HardwareId", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<String> hardwareId);

    /**
     * 
     * @param daylightSavings
     * @param utcDateTime
     * @param timeZone
     * @param dateTimeType
     */
    @WebMethod(operationName = "SetSystemDateAndTime", action = "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime")
    @RequestWrapper(localName = "SetSystemDateAndTime", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetSystemDateAndTime")
    @ResponseWrapper(localName = "SetSystemDateAndTimeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetSystemDateAndTimeResponse")
    public void setSystemDateAndTime(
        @WebParam(name = "DateTimeType", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        SetDateTimeType dateTimeType,
        @WebParam(name = "DaylightSavings", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean daylightSavings,
        @WebParam(name = "TimeZone", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        TimeZone timeZone,
        @WebParam(name = "UTCDateTime", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        DateTime utcDateTime);

    /**
     * 
     * @return
     *     returns org.onvif.ver10.schema.SystemDateTime
     */
    @WebMethod(operationName = "GetSystemDateAndTime", action = "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime")
    @WebResult(name = "SystemDateAndTime", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetSystemDateAndTime", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetSystemDateAndTime")
    @ResponseWrapper(localName = "GetSystemDateAndTimeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetSystemDateAndTimeResponse")
    public SystemDateTime getSystemDateAndTime();

    /**
     * This operation reloads the parameters on the device to their factory default values.
     *             
     * 
     * @param factoryDefault
     */
    @WebMethod(operationName = "SetSystemFactoryDefault", action = "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault")
    @RequestWrapper(localName = "SetSystemFactoryDefault", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetSystemFactoryDefault")
    @ResponseWrapper(localName = "SetSystemFactoryDefaultResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetSystemFactoryDefaultResponse")
    public void setSystemFactoryDefault(
        @WebParam(name = "FactoryDefault", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        FactoryDefaultType factoryDefault);

    /**
     * This operation upgrades a device firmware version. After a successful upgrade the
     *                 response
     *                 message is sent before the device reboots. The device should support firmware upgrade
     *                 through the UpgradeSystemFirmware command. The exact format of the firmware data is
     *                 outside the scope of this standard.
     *             
     * 
     * @param firmware
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UpgradeSystemFirmware", action = "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware")
    @WebResult(name = "Message", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "UpgradeSystemFirmware", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.UpgradeSystemFirmware")
    @ResponseWrapper(localName = "UpgradeSystemFirmwareResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.UpgradeSystemFirmwareResponse")
    public String upgradeSystemFirmware(
        @WebParam(name = "Firmware", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        AttachmentData firmware);

    /**
     * This operation reboots the device.
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "SystemReboot", action = "http://www.onvif.org/ver10/device/wsdl/SystemReboot")
    @WebResult(name = "Message", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "SystemReboot", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SystemReboot")
    @ResponseWrapper(localName = "SystemRebootResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SystemRebootResponse")
    public String systemReboot();

    /**
     * This operation restores the system backup configuration files(s) previously retrieved
     *                 from a
     *                 device. The device should support restore of backup configuration file(s) through the
     *                 RestoreSystem command. The exact format of the backup configuration file(s) is outside the
     *                 scope of this standard. If the command is supported, it shall accept backup files returned by
     *                 the GetSystemBackup command.
     *             
     * 
     * @param backupFiles
     */
    @WebMethod(operationName = "RestoreSystem", action = "http://www.onvif.org/ver10/device/wsdl/RestoreSystem")
    @RequestWrapper(localName = "RestoreSystem", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.RestoreSystem")
    @ResponseWrapper(localName = "RestoreSystemResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.RestoreSystemResponse")
    public void restoreSystem(
        @WebParam(name = "BackupFiles", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<BackupFile> backupFiles);

    /**
     * This operation is retrieves system backup configuration file(s) from a device. The
     *                 device
     *                 should support return of back up configuration file(s) through the GetSystemBackup command.
     *                 The backup is returned with reference to a name and mime-type together with binary data.
     *                 The exact format of the backup configuration files is outside the scope of this standard.
     *             
     * 
     * @return
     *     returns java.util.List<org.onvif.ver10.schema.BackupFile>
     */
    @WebMethod(operationName = "GetSystemBackup", action = "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup")
    @WebResult(name = "BackupFiles", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetSystemBackup", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetSystemBackup")
    @ResponseWrapper(localName = "GetSystemBackupResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetSystemBackupResponse")
    public List<BackupFile> getSystemBackup();

    /**
     * This operation gets a system log from the device. The exact format of the system logs is
     *                 outside the scope of this standard.
     *             
     * 
     * @param logType
     * @return
     *     returns org.onvif.ver10.schema.SystemLog
     */
    @WebMethod(operationName = "GetSystemLog", action = "http://www.onvif.org/ver10/device/wsdl/GetSystemLog")
    @WebResult(name = "SystemLog", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetSystemLog", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetSystemLog")
    @ResponseWrapper(localName = "GetSystemLogResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetSystemLogResponse")
    public SystemLog getSystemLog(
        @WebParam(name = "LogType", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        SystemLogType logType);

    /**
     * This operation gets arbitary device diagnostics information from the device.
     *             
     * 
     * @return
     *     returns org.onvif.ver10.schema.SupportInformation
     */
    @WebMethod(operationName = "GetSystemSupportInformation", action = "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation")
    @WebResult(name = "SupportInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetSystemSupportInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetSystemSupportInformation")
    @ResponseWrapper(localName = "GetSystemSupportInformationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetSystemSupportInformationResponse")
    public SupportInformation getSystemSupportInformation();

    /**
     * 
     * @return
     *     returns java.util.List<org.onvif.ver10.schema.Scope>
     */
    @WebMethod(operationName = "GetScopes", action = "http://www.onvif.org/ver10/device/wsdl/GetScopes")
    @WebResult(name = "Scopes", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetScopes", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetScopes")
    @ResponseWrapper(localName = "GetScopesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetScopesResponse")
    public List<Scope> getScopes();

    /**
     * This operation sets the scope parameters of a device. The scope parameters are used in
     *                 the
     *                 device discovery to match a probe message.
     *                 This operation replaces all existing configurable scope parameters (not fixed parameters). If
     *                 this shall be avoided, one should use the scope add command instead. The device shall
     *                 support configuration of discovery scope parameters through the SetScopes command.
     *             
     * 
     * @param scopes
     */
    @WebMethod(operationName = "SetScopes", action = "http://www.onvif.org/ver10/device/wsdl/SetScopes")
    @RequestWrapper(localName = "SetScopes", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetScopes")
    @ResponseWrapper(localName = "SetScopesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetScopesResponse")
    public void setScopes(
        @WebParam(name = "Scopes", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<String> scopes);

    /**
     * This operation adds new configurable scope parameters to a device. The scope parameters
     *                 are used in the device discovery to match a probe message. The device shall
     *                 support addition of discovery scope parameters through the AddScopes command.
     *             
     * 
     * @param scopeItem
     */
    @WebMethod(operationName = "AddScopes", action = "http://www.onvif.org/ver10/device/wsdl/AddScopes")
    @RequestWrapper(localName = "AddScopes", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.AddScopes")
    @ResponseWrapper(localName = "AddScopesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.AddScopesResponse")
    public void addScopes(
        @WebParam(name = "ScopeItem", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<String> scopeItem);

    /**
     * This operation deletes scope-configurable scope parameters from a device. The scope
     *                 parameters are used in the device discovery to match a probe message, see Section 7. The
     *                 device shall support deletion of discovery scope parameters through the RemoveScopes
     *                 command.
     *                 Table
     *             
     * 
     * @param scopeItem
     */
    @WebMethod(operationName = "RemoveScopes", action = "http://www.onvif.org/ver10/device/wsdl/RemoveScopes")
    @RequestWrapper(localName = "RemoveScopes", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.RemoveScopes")
    @ResponseWrapper(localName = "RemoveScopesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.RemoveScopesResponse")
    public void removeScopes(
        @WebParam(name = "ScopeItem", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.INOUT)
        Holder<List<String>> scopeItem);

    /**
     * This operation gets the discovery mode of a device. See Section 7.2 for the definition
     *                 of the
     *                 different device discovery modes. The device shall support retrieval of the discovery mode
     *                 setting through the GetDiscoveryMode command.
     *             
     * 
     * @return
     *     returns org.onvif.ver10.schema.DiscoveryMode
     */
    @WebMethod(operationName = "GetDiscoveryMode", action = "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode")
    @WebResult(name = "DiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetDiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDiscoveryMode")
    @ResponseWrapper(localName = "GetDiscoveryModeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDiscoveryModeResponse")
    public DiscoveryMode getDiscoveryMode();

    /**
     * This operation sets the discovery mode operation of a device. See Section 7.2 for the
     *                 definition of the different device discovery modes. The device shall support configuration of
     *                 the discovery mode setting through the SetDiscoveryMode command.
     *             
     * 
     * @param discoveryMode
     */
    @WebMethod(operationName = "SetDiscoveryMode", action = "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode")
    @RequestWrapper(localName = "SetDiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetDiscoveryMode")
    @ResponseWrapper(localName = "SetDiscoveryModeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetDiscoveryModeResponse")
    public void setDiscoveryMode(
        @WebParam(name = "DiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        DiscoveryMode discoveryMode);

    /**
     * This operation gets the remote discovery mode of a device. See Section 7.4 for the
     *                 definition
     *                 of remote discovery extensions. A device that supports remote discovery shall support
     *                 retrieval of the remote discovery mode setting through the GetRemoteDiscoveryMode
     *                 command.
     *             
     * 
     * @return
     *     returns org.onvif.ver10.schema.DiscoveryMode
     */
    @WebMethod(operationName = "GetRemoteDiscoveryMode", action = "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode")
    @WebResult(name = "RemoteDiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetRemoteDiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetRemoteDiscoveryMode")
    @ResponseWrapper(localName = "GetRemoteDiscoveryModeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetRemoteDiscoveryModeResponse")
    public DiscoveryMode getRemoteDiscoveryMode();

    /**
     * This operation sets the remote discovery mode of operation of a device. See Section 7.4
     *                 for
     *                 the definition of remote discovery remote extensions. A device that supports remote discovery
     *                 shall support configuration of the discovery mode setting through the
     *                 SetRemoteDiscoveryMode command.
     *             
     * 
     * @param remoteDiscoveryMode
     */
    @WebMethod(operationName = "SetRemoteDiscoveryMode", action = "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode")
    @RequestWrapper(localName = "SetRemoteDiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetRemoteDiscoveryMode")
    @ResponseWrapper(localName = "SetRemoteDiscoveryModeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetRemoteDiscoveryModeResponse")
    public void setRemoteDiscoveryMode(
        @WebParam(name = "RemoteDiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        DiscoveryMode remoteDiscoveryMode);

    /**
     * This operation gets the remote DP address or addresses from a device. If the device
     *                 supports
     *                 remote discovery, as specified in Section 7.4, the device shall support retrieval of the remote
     *                 DP address(es) through the GetDPAddresses command.
     *             
     * 
     * @return
     *     returns java.util.List<org.onvif.ver10.schema.NetworkHost>
     */
    @WebMethod(operationName = "GetDPAddresses", action = "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses")
    @WebResult(name = "DPAddress", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetDPAddresses", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDPAddresses")
    @ResponseWrapper(localName = "GetDPAddressesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDPAddressesResponse")
    public List<NetworkHost> getDPAddresses();

    /**
     * A client can ask for the device service endpoint reference address property that can be
     *                 used
     *                 to derive the password equivalent for remote user operation. The device shall support the
     *                 GetEndpointReference command returning the address property of the device service
     *                 endpoint reference.
     *             
     * 
     * @param parameters
     * @return
     *     returns org.onvif.ver10.device.wsdl.GetEndpointReferenceResponse
     */
    @WebMethod(operationName = "GetEndpointReference", action = "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference")
    @WebResult(name = "GetEndpointReferenceResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", partName = "parameters")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public GetEndpointReferenceResponse getEndpointReference(
        @WebParam(name = "GetEndpointReference", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", partName = "parameters")
        GetEndpointReference parameters);

    /**
     * 
     * @return
     *     returns org.onvif.ver10.schema.RemoteUser
     */
    @WebMethod(operationName = "GetRemoteUser", action = "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser")
    @WebResult(name = "RemoteUser", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetRemoteUser", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetRemoteUser")
    @ResponseWrapper(localName = "GetRemoteUserResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetRemoteUserResponse")
    public RemoteUser getRemoteUser();

    /**
     * 
     * @param remoteUser
     */
    @WebMethod(operationName = "SetRemoteUser", action = "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser")
    @RequestWrapper(localName = "SetRemoteUser", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetRemoteUser")
    @ResponseWrapper(localName = "SetRemoteUserResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetRemoteUserResponse")
    public void setRemoteUser(
        @WebParam(name = "RemoteUser", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        RemoteUser remoteUser);

    /**
     * This operation lists the registered users and corresponding credentials on a device. The
     *                 device shall support retrieval of registered device users and their credentials for the user
     *                 token through the GetUsers command.
     *             
     * 
     * @return
     *     returns java.util.List<org.onvif.ver10.schema.User>
     */
    @WebMethod(operationName = "GetUsers", action = "http://www.onvif.org/ver10/device/wsdl/GetUsers")
    @WebResult(name = "User", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetUsers", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetUsers")
    @ResponseWrapper(localName = "GetUsersResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetUsersResponse")
    public List<User> getUsers();

    /**
     * 
     * @param user
     */
    @WebMethod(operationName = "CreateUsers", action = "http://www.onvif.org/ver10/device/wsdl/CreateUsers")
    @RequestWrapper(localName = "CreateUsers", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.CreateUsers")
    @ResponseWrapper(localName = "CreateUsersResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.CreateUsersResponse")
    public void createUsers(
        @WebParam(name = "User", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<User> user);

    /**
     * This operation deletes users on a device. The device shall support deletion of device
     *                 users and their credentials
     *                 through the DeleteUsers command. A device may have one or more fixed users
     *                 that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a
     *                 fault message shall be returned and no users be deleted.
     *             
     * 
     * @param username
     */
    @WebMethod(operationName = "DeleteUsers", action = "http://www.onvif.org/ver10/device/wsdl/DeleteUsers")
    @RequestWrapper(localName = "DeleteUsers", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.DeleteUsers")
    @ResponseWrapper(localName = "DeleteUsersResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.DeleteUsersResponse")
    public void deleteUsers(
        @WebParam(name = "Username", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<String> username);

    /**
     * This operation updates the settings for one or several users on a device for
     *                 authentication purposes.
     *                 The device shall support update of device users and their credentials through the SetUser command.
     *                 Either all change requests are processed successfully or a fault message shall be returned and no change
     *                 requests be processed.
     *             
     * 
     * @param user
     */
    @WebMethod(operationName = "SetUser", action = "http://www.onvif.org/ver10/device/wsdl/SetUser")
    @RequestWrapper(localName = "SetUser", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetUser")
    @ResponseWrapper(localName = "SetUserResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetUserResponse")
    public void setUser(
        @WebParam(name = "User", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<User> user);

    /**
     * This method allows to provide a URL where product specific WSDL and schema definitions
     *                 can be retrieved. This method is deprecated.
     *             
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetWsdlUrl", action = "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl")
    @WebResult(name = "WsdlUrl", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetWsdlUrl", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetWsdlUrl")
    @ResponseWrapper(localName = "GetWsdlUrlResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetWsdlUrlResponse")
    public String getWsdlUrl();

    /**
     * This method allows retrieval of all the available parameters and their valid ranges for
     *                 the password complexity configuration.
     *             
     * 
     * @param specialCharsRange
     * @param minLenRange
     * @param uppercaseRange
     * @param blockUsernameOccurrenceSupported
     * @param policyConfigurationLockSupported
     * @param numberRange
     */
    @WebMethod(operationName = "GetPasswordComplexityOptions", action = "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityOptions")
    @RequestWrapper(localName = "GetPasswordComplexityOptions", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetPasswordComplexityOptions")
    @ResponseWrapper(localName = "GetPasswordComplexityOptionsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetPasswordComplexityOptionsResponse")
    public void getPasswordComplexityOptions(
        @WebParam(name = "MinLenRange", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<IntRange> minLenRange,
        @WebParam(name = "UppercaseRange", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<IntRange> uppercaseRange,
        @WebParam(name = "NumberRange", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<IntRange> numberRange,
        @WebParam(name = "SpecialCharsRange", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<IntRange> specialCharsRange,
        @WebParam(name = "BlockUsernameOccurrenceSupported", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Boolean> blockUsernameOccurrenceSupported,
        @WebParam(name = "PolicyConfigurationLockSupported", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Boolean> policyConfigurationLockSupported);

    /**
     * This method allows retrieval of the current password complexity configuration
     *                 settings.
     *             
     * 
     * @param uppercase
     * @param blockUsernameOccurrence
     * @param number
     * @param specialChars
     * @param minLen
     * @param policyConfigurationLocked
     */
    @WebMethod(operationName = "GetPasswordComplexityConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityConfiguration")
    @RequestWrapper(localName = "GetPasswordComplexityConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetPasswordComplexityConfiguration")
    @ResponseWrapper(localName = "GetPasswordComplexityConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetPasswordComplexityConfigurationResponse")
    public void getPasswordComplexityConfiguration(
        @WebParam(name = "MinLen", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Integer> minLen,
        @WebParam(name = "Uppercase", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Integer> uppercase,
        @WebParam(name = "Number", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Integer> number,
        @WebParam(name = "SpecialChars", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Integer> specialChars,
        @WebParam(name = "BlockUsernameOccurrence", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Boolean> blockUsernameOccurrence,
        @WebParam(name = "PolicyConfigurationLocked", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Boolean> policyConfigurationLocked);

    /**
     * This method allows setting of the password complexity configuration.
     *             
     * 
     * @param uppercase
     * @param blockUsernameOccurrence
     * @param number
     * @param specialChars
     * @param minLen
     * @param policyConfigurationLocked
     */
    @WebMethod(operationName = "SetPasswordComplexityConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/SetPasswordComplexityConfiguration")
    @RequestWrapper(localName = "SetPasswordComplexityConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetPasswordComplexityConfiguration")
    @ResponseWrapper(localName = "SetPasswordComplexityConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetPasswordComplexityConfigurationResponse")
    public void setPasswordComplexityConfiguration(
        @WebParam(name = "MinLen", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        Integer minLen,
        @WebParam(name = "Uppercase", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        Integer uppercase,
        @WebParam(name = "Number", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        Integer number,
        @WebParam(name = "SpecialChars", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        Integer specialChars,
        @WebParam(name = "BlockUsernameOccurrence", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        Boolean blockUsernameOccurrence,
        @WebParam(name = "PolicyConfigurationLocked", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        Boolean policyConfigurationLocked);

    /**
     * This method allows retrieval of the current password history configuration settings.
     *             
     * 
     * @param length
     * @param enabled
     */
    @WebMethod(operationName = "GetPasswordHistoryConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/GetPasswordHistoryConfiguration")
    @RequestWrapper(localName = "GetPasswordHistoryConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetPasswordHistoryConfiguration")
    @ResponseWrapper(localName = "GetPasswordHistoryConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetPasswordHistoryConfigurationResponse")
    public void getPasswordHistoryConfiguration(
        @WebParam(name = "Enabled", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Boolean> enabled,
        @WebParam(name = "Length", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Integer> length);

    /**
     * This method allows setting of the password history configuration.
     * 
     * @param length
     * @param enabled
     */
    @WebMethod(operationName = "SetPasswordHistoryConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/SetPasswordHistoryConfiguration")
    @RequestWrapper(localName = "SetPasswordHistoryConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetPasswordHistoryConfiguration")
    @ResponseWrapper(localName = "SetPasswordHistoryConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetPasswordHistoryConfigurationResponse")
    public void setPasswordHistoryConfiguration(
        @WebParam(name = "Enabled", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean enabled,
        @WebParam(name = "Length", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        int length);

    /**
     * This method allows retrieval of all the available parameters and their valid ranges for
     *                 the authentication failure warning configuration.
     *             
     * 
     * @param authFailureRange
     * @param monitorPeriodRange
     */
    @WebMethod(operationName = "GetAuthFailureWarningOptions", action = "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningOptions")
    @RequestWrapper(localName = "GetAuthFailureWarningOptions", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetAuthFailureWarningOptions")
    @ResponseWrapper(localName = "GetAuthFailureWarningOptionsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetAuthFailureWarningOptionsResponse")
    public void getAuthFailureWarningOptions(
        @WebParam(name = "MonitorPeriodRange", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<IntRange> monitorPeriodRange,
        @WebParam(name = "AuthFailureRange", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<IntRange> authFailureRange);

    /**
     * This method allows retrieval of the current authentication failure warning configuration
     *                 settings.
     *             
     * 
     * @param monitorPeriod
     * @param enabled
     * @param maxAuthFailures
     */
    @WebMethod(operationName = "GetAuthFailureWarningConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningConfiguration")
    @RequestWrapper(localName = "GetAuthFailureWarningConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetAuthFailureWarningConfiguration")
    @ResponseWrapper(localName = "GetAuthFailureWarningConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetAuthFailureWarningConfigurationResponse")
    public void getAuthFailureWarningConfiguration(
        @WebParam(name = "Enabled", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Boolean> enabled,
        @WebParam(name = "MonitorPeriod", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Integer> monitorPeriod,
        @WebParam(name = "MaxAuthFailures", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Integer> maxAuthFailures);

    /**
     * This method allows setting of the authentication failure warning configuration.
     *             
     * 
     * @param monitorPeriod
     * @param enabled
     * @param maxAuthFailures
     */
    @WebMethod(operationName = "SetAuthFailureWarningConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/SetAuthFailureWarningConfiguration")
    @RequestWrapper(localName = "SetAuthFailureWarningConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetAuthFailureWarningConfiguration")
    @ResponseWrapper(localName = "SetAuthFailureWarningConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetAuthFailureWarningConfigurationResponse")
    public void setAuthFailureWarningConfiguration(
        @WebParam(name = "Enabled", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean enabled,
        @WebParam(name = "MonitorPeriod", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        int monitorPeriod,
        @WebParam(name = "MaxAuthFailures", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        int maxAuthFailures);

    /**
     * This method has been replaced by the more generic GetServices method.
     *                 For capabilities of individual services refer to the GetServiceCapabilities methods.
     *             
     * 
     * @param category
     * @return
     *     returns org.onvif.ver10.schema.Capabilities
     */
    @WebMethod(operationName = "GetCapabilities", action = "http://www.onvif.org/ver10/device/wsdl/GetCapabilities")
    @WebResult(name = "Capabilities", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetCapabilities", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetCapabilities")
    @ResponseWrapper(localName = "GetCapabilitiesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetCapabilitiesResponse")
    public Capabilities getCapabilities(
        @WebParam(name = "Category", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<CapabilityCategory> category);

    /**
     * This operation sets the remote DP address or addresses on a device. If the device
     *                 supports
     *                 remote discovery, as specified in Section 7.4, the device shall support configuration of the
     *                 remote DP address(es) through the SetDPAddresses command.
     *             
     * 
     * @param dpAddress
     */
    @WebMethod(operationName = "SetDPAddresses", action = "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses")
    @RequestWrapper(localName = "SetDPAddresses", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetDPAddresses")
    @ResponseWrapper(localName = "SetDPAddressesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetDPAddressesResponse")
    public void setDPAddresses(
        @WebParam(name = "DPAddress", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<NetworkHost> dpAddress);

    /**
     * This operation is used by an endpoint to get the hostname from a device. The device
     *                 shall
     *                 return its hostname configurations through the GetHostname command.
     *             
     * 
     * @return
     *     returns org.onvif.ver10.schema.HostnameInformation
     */
    @WebMethod(operationName = "GetHostname", action = "http://www.onvif.org/ver10/device/wsdl/GetHostname")
    @WebResult(name = "HostnameInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetHostname", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetHostname")
    @ResponseWrapper(localName = "GetHostnameResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetHostnameResponse")
    public HostnameInformation getHostname();

    /**
     * 
     * @param name
     */
    @WebMethod(operationName = "SetHostname", action = "http://www.onvif.org/ver10/device/wsdl/SetHostname")
    @RequestWrapper(localName = "SetHostname", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetHostname")
    @ResponseWrapper(localName = "SetHostnameResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetHostnameResponse")
    public void setHostname(
        @WebParam(name = "Name", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String name);

    /**
     * This operation controls whether the hostname is set manually or retrieved via DHCP.
     *             
     * 
     * @param fromDHCP
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "SetHostnameFromDHCP", action = "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP")
    @WebResult(name = "RebootNeeded", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "SetHostnameFromDHCP", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetHostnameFromDHCP")
    @ResponseWrapper(localName = "SetHostnameFromDHCPResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetHostnameFromDHCPResponse")
    public boolean setHostnameFromDHCP(
        @WebParam(name = "FromDHCP", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean fromDHCP);

    /**
     * This operation gets the DNS settings from a device. The device shall return its DNS
     *                 configurations through the GetDNS command.
     *             
     * 
     * @return
     *     returns org.onvif.ver10.schema.DNSInformation
     */
    @WebMethod(operationName = "GetDNS", action = "http://www.onvif.org/ver10/device/wsdl/GetDNS")
    @WebResult(name = "DNSInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetDNS", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDNS")
    @ResponseWrapper(localName = "GetDNSResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDNSResponse")
    public DNSInformation getDNS();

    /**
     * This operation sets the DNS settings on a device. It shall be possible to set the device
     *                 DNS
     *                 configurations through the SetDNS command.
     *             
     * 
     * @param fromDHCP
     * @param searchDomain
     * @param dnsManual
     */
    @WebMethod(operationName = "SetDNS", action = "http://www.onvif.org/ver10/device/wsdl/SetDNS")
    @RequestWrapper(localName = "SetDNS", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetDNS")
    @ResponseWrapper(localName = "SetDNSResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetDNSResponse")
    public void setDNS(
        @WebParam(name = "FromDHCP", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean fromDHCP,
        @WebParam(name = "SearchDomain", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<String> searchDomain,
        @WebParam(name = "DNSManual", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<IPAddress> dnsManual);

    /**
     * This operation gets the NTP settings from a device. If the device supports NTP, it shall
     *                 be
     *                 possible to get the NTP server settings through the GetNTP command.
     *             
     * 
     * @return
     *     returns org.onvif.ver10.schema.NTPInformation
     */
    @WebMethod(operationName = "GetNTP", action = "http://www.onvif.org/ver10/device/wsdl/GetNTP")
    @WebResult(name = "NTPInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetNTP", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetNTP")
    @ResponseWrapper(localName = "GetNTPResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetNTPResponse")
    public NTPInformation getNTP();

    /**
     * 
     * @param fromDHCP
     * @param ntpManual
     */
    @WebMethod(operationName = "SetNTP", action = "http://www.onvif.org/ver10/device/wsdl/SetNTP")
    @RequestWrapper(localName = "SetNTP", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetNTP")
    @ResponseWrapper(localName = "SetNTPResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetNTPResponse")
    public void setNTP(
        @WebParam(name = "FromDHCP", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean fromDHCP,
        @WebParam(name = "NTPManual", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<NetworkHost> ntpManual);

    /**
     * This operation gets the dynamic DNS settings from a device. If the device supports
     *                 dynamic
     *                 DNS as specified in [RFC 2136] and [RFC 4702], it shall be possible to get the type, name
     *                 and TTL through the GetDynamicDNS command.
     *             
     * 
     * @return
     *     returns org.onvif.ver10.schema.DynamicDNSInformation
     */
    @WebMethod(operationName = "GetDynamicDNS", action = "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS")
    @WebResult(name = "DynamicDNSInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetDynamicDNS", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDynamicDNS")
    @ResponseWrapper(localName = "GetDynamicDNSResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDynamicDNSResponse")
    public DynamicDNSInformation getDynamicDNS();

    /**
     * This operation sets the dynamic DNS settings on a device. If the device supports dynamic
     *                 DNS as specified in [RFC 2136] and [RFC 4702], it shall be possible to set the type, name
     *                 and TTL through the SetDynamicDNS command.
     *             
     * 
     * @param name
     * @param type
     * @param ttl
     */
    @WebMethod(operationName = "SetDynamicDNS", action = "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS")
    @RequestWrapper(localName = "SetDynamicDNS", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetDynamicDNS")
    @ResponseWrapper(localName = "SetDynamicDNSResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetDynamicDNSResponse")
    public void setDynamicDNS(
        @WebParam(name = "Type", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        DynamicDNSType type,
        @WebParam(name = "Name", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String name,
        @WebParam(name = "TTL", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        Duration ttl);

    /**
     * This operation gets the network interface configuration from a device. The device shall
     *                 support return of network interface configuration settings as defined by the NetworkInterface
     *                 type through the GetNetworkInterfaces command.
     *             
     * 
     * @return
     *     returns java.util.List<org.onvif.ver10.schema.NetworkInterface>
     */
    @WebMethod(operationName = "GetNetworkInterfaces", action = "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces")
    @WebResult(name = "NetworkInterfaces", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetNetworkInterfaces", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetNetworkInterfaces")
    @ResponseWrapper(localName = "GetNetworkInterfacesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetNetworkInterfacesResponse")
    public List<NetworkInterface> getNetworkInterfaces();

    /**
     * 
     * @param networkInterface
     * @param interfaceToken
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "SetNetworkInterfaces", action = "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces")
    @WebResult(name = "RebootNeeded", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "SetNetworkInterfaces", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetNetworkInterfaces")
    @ResponseWrapper(localName = "SetNetworkInterfacesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetNetworkInterfacesResponse")
    public boolean setNetworkInterfaces(
        @WebParam(name = "InterfaceToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String interfaceToken,
        @WebParam(name = "NetworkInterface", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        NetworkInterfaceSetConfiguration networkInterface);

    /**
     * This operation gets defined network protocols from a device. The device shall support
     *                 the
     *                 GetNetworkProtocols command returning configured network protocols.
     *             
     * 
     * @return
     *     returns java.util.List<org.onvif.ver10.schema.NetworkProtocol>
     */
    @WebMethod(operationName = "GetNetworkProtocols", action = "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols")
    @WebResult(name = "NetworkProtocols", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetNetworkProtocols", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetNetworkProtocols")
    @ResponseWrapper(localName = "GetNetworkProtocolsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetNetworkProtocolsResponse")
    public List<NetworkProtocol> getNetworkProtocols();

    /**
     * This operation configures defined network protocols on a device. The device shall
     *                 support
     *                 configuration of defined network protocols through the SetNetworkProtocols command.
     *             
     * 
     * @param networkProtocols
     */
    @WebMethod(operationName = "SetNetworkProtocols", action = "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols")
    @RequestWrapper(localName = "SetNetworkProtocols", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetNetworkProtocols")
    @ResponseWrapper(localName = "SetNetworkProtocolsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetNetworkProtocolsResponse")
    public void setNetworkProtocols(
        @WebParam(name = "NetworkProtocols", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<NetworkProtocol> networkProtocols);

    /**
     * This operation gets the default gateway settings from a device. The device shall support
     *                 the
     *                 GetNetworkDefaultGateway command returning configured default gateway address(es).
     *             
     * 
     * @return
     *     returns org.onvif.ver10.schema.NetworkGateway
     */
    @WebMethod(operationName = "GetNetworkDefaultGateway", action = "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway")
    @WebResult(name = "NetworkGateway", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetNetworkDefaultGateway", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetNetworkDefaultGateway")
    @ResponseWrapper(localName = "GetNetworkDefaultGatewayResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetNetworkDefaultGatewayResponse")
    public NetworkGateway getNetworkDefaultGateway();

    /**
     * This operation sets the default gateway settings on a device. The device shall support
     *                 configuration of default gateway through the SetNetworkDefaultGateway command.
     *             
     * 
     * @param iPv4Address
     * @param iPv6Address
     */
    @WebMethod(operationName = "SetNetworkDefaultGateway", action = "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway")
    @RequestWrapper(localName = "SetNetworkDefaultGateway", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetNetworkDefaultGateway")
    @ResponseWrapper(localName = "SetNetworkDefaultGatewayResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetNetworkDefaultGatewayResponse")
    public void setNetworkDefaultGateway(
        @WebParam(name = "IPv4Address", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<String> iPv4Address,
        @WebParam(name = "IPv6Address", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<String> iPv6Address);

    /**
     * 
     * @return
     *     returns org.onvif.ver10.schema.NetworkZeroConfiguration
     */
    @WebMethod(operationName = "GetZeroConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration")
    @WebResult(name = "ZeroConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetZeroConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetZeroConfiguration")
    @ResponseWrapper(localName = "GetZeroConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetZeroConfigurationResponse")
    public NetworkZeroConfiguration getZeroConfiguration();

    /**
     * This operation sets the zero-configuration. Use GetCapalities to get if
     *                 zero-zero-configuration is supported or not.
     *             
     * 
     * @param interfaceToken
     * @param enabled
     */
    @WebMethod(operationName = "SetZeroConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration")
    @RequestWrapper(localName = "SetZeroConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetZeroConfiguration")
    @ResponseWrapper(localName = "SetZeroConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetZeroConfigurationResponse")
    public void setZeroConfiguration(
        @WebParam(name = "InterfaceToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String interfaceToken,
        @WebParam(name = "Enabled", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean enabled);

    /**
     * This operation gets the IP address filter settings from a device. If the device supports
     *                 device
     *                 access control based on IP filtering rules (denied or accepted ranges of IP addresses), the
     *                 device shall support the GetIPAddressFilter command.
     *             
     * 
     * @return
     *     returns org.onvif.ver10.schema.IPAddressFilter
     */
    @WebMethod(operationName = "GetIPAddressFilter", action = "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter")
    @WebResult(name = "IPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetIPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetIPAddressFilter")
    @ResponseWrapper(localName = "GetIPAddressFilterResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetIPAddressFilterResponse")
    public IPAddressFilter getIPAddressFilter();

    /**
     * This operation sets the IP address filter settings on a device. If the device supports
     *                 device
     *                 access control based on IP filtering rules (denied or accepted ranges of IP addresses), the
     *                 device shall support configuration of IP filtering rules through the SetIPAddressFilter
     *                 command.
     *             
     * 
     * @param ipAddressFilter
     */
    @WebMethod(operationName = "SetIPAddressFilter", action = "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter")
    @RequestWrapper(localName = "SetIPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetIPAddressFilter")
    @ResponseWrapper(localName = "SetIPAddressFilterResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetIPAddressFilterResponse")
    public void setIPAddressFilter(
        @WebParam(name = "IPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        IPAddressFilter ipAddressFilter);

    /**
     * This operation adds an IP filter address to a device. If the device supports device
     *                 access
     *                 control based on IP filtering rules (denied or accepted ranges of IP addresses), the device
     *                 shall support adding of IP filtering addresses through the AddIPAddressFilter command.
     *             
     * 
     * @param ipAddressFilter
     */
    @WebMethod(operationName = "AddIPAddressFilter", action = "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter")
    @RequestWrapper(localName = "AddIPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.AddIPAddressFilter")
    @ResponseWrapper(localName = "AddIPAddressFilterResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.AddIPAddressFilterResponse")
    public void addIPAddressFilter(
        @WebParam(name = "IPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        IPAddressFilter ipAddressFilter);

    /**
     * This operation deletes an IP filter address from a device. If the device supports device
     *                 access
     *                 control based on IP filtering rules (denied or accepted ranges of IP addresses), the device
     *                 shall support deletion of IP filtering addresses through the RemoveIPAddressFilter command.
     *             
     * 
     * @param ipAddressFilter
     */
    @WebMethod(operationName = "RemoveIPAddressFilter", action = "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter")
    @RequestWrapper(localName = "RemoveIPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.RemoveIPAddressFilter")
    @ResponseWrapper(localName = "RemoveIPAddressFilterResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.RemoveIPAddressFilterResponse")
    public void removeIPAddressFilter(
        @WebParam(name = "IPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        IPAddressFilter ipAddressFilter);

    /**
     * Access to different services and sub-sets of services should be subject to access
     *                 control. The
     *                 WS-Security framework gives the prerequisite for end-point authentication. Authorization
     *                 decisions can then be taken using an access security policy. This standard does not mandate
     *                 any particular policy description format or security policy but this is up to the device
     *                 manufacturer or system provider to choose policy and policy description format of choice.
     *                 However, an access policy (in arbitrary format) can be requested using this command. If the
     *                 device supports access policy settings based on WS-Security authentication, then the device
     *                 shall support this command.
     *             
     * 
     * @return
     *     returns org.onvif.ver10.schema.BinaryData
     */
    @WebMethod(operationName = "GetAccessPolicy", action = "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy")
    @WebResult(name = "PolicyFile", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetAccessPolicy", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetAccessPolicy")
    @ResponseWrapper(localName = "GetAccessPolicyResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetAccessPolicyResponse")
    public BinaryData getAccessPolicy();

    /**
     * This command sets the device access security policy (for more details on the access
     *                 security
     *                 policy see the Get command). If the device supports access policy settings
     *                 based on WS-Security authentication, then the device shall support this command.
     *             
     * 
     * @param policyFile
     */
    @WebMethod(operationName = "SetAccessPolicy", action = "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy")
    @RequestWrapper(localName = "SetAccessPolicy", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetAccessPolicy")
    @ResponseWrapper(localName = "SetAccessPolicyResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetAccessPolicyResponse")
    public void setAccessPolicy(
        @WebParam(name = "PolicyFile", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        BinaryData policyFile);

    /**
     * 
     * @param validNotAfter
     * @param subject
     * @param certificateID
     * @param validNotBefore
     * @return
     *     returns org.onvif.ver10.schema.Certificate
     */
    @WebMethod(operationName = "CreateCertificate", action = "http://www.onvif.org/ver10/device/wsdl/CreateCertificate")
    @WebResult(name = "NvtCertificate", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "CreateCertificate", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.CreateCertificate")
    @ResponseWrapper(localName = "CreateCertificateResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.CreateCertificateResponse")
    public Certificate createCertificate(
        @WebParam(name = "CertificateID", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String certificateID,
        @WebParam(name = "Subject", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String subject,
        @WebParam(name = "ValidNotBefore", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        XMLGregorianCalendar validNotBefore,
        @WebParam(name = "ValidNotAfter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        XMLGregorianCalendar validNotAfter);

    /**
     * 
     * @return
     *     returns java.util.List<org.onvif.ver10.schema.Certificate>
     */
    @WebMethod(operationName = "GetCertificates", action = "http://www.onvif.org/ver10/device/wsdl/GetCertificates")
    @WebResult(name = "NvtCertificate", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetCertificates", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetCertificates")
    @ResponseWrapper(localName = "GetCertificatesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetCertificatesResponse")
    public List<Certificate> getCertificates();

    /**
     * 
     * @return
     *     returns java.util.List<org.onvif.ver10.schema.CertificateStatus>
     */
    @WebMethod(operationName = "GetCertificatesStatus", action = "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus")
    @WebResult(name = "CertificateStatus", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetCertificatesStatus", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetCertificatesStatus")
    @ResponseWrapper(localName = "GetCertificatesStatusResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetCertificatesStatusResponse")
    public List<CertificateStatus> getCertificatesStatus();

    /**
     * 
     * @param certificateStatus
     */
    @WebMethod(operationName = "SetCertificatesStatus", action = "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus")
    @RequestWrapper(localName = "SetCertificatesStatus", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetCertificatesStatus")
    @ResponseWrapper(localName = "SetCertificatesStatusResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetCertificatesStatusResponse")
    public void setCertificatesStatus(
        @WebParam(name = "CertificateStatus", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<CertificateStatus> certificateStatus);

    /**
     * 
     * @param certificateID
     */
    @WebMethod(operationName = "DeleteCertificates", action = "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates")
    @RequestWrapper(localName = "DeleteCertificates", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.DeleteCertificates")
    @ResponseWrapper(localName = "DeleteCertificatesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.DeleteCertificatesResponse")
    public void deleteCertificates(
        @WebParam(name = "CertificateID", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<String> certificateID);

    /**
     * 
     * @param subject
     * @param certificateID
     * @param attributes
     * @return
     *     returns org.onvif.ver10.schema.BinaryData
     */
    @WebMethod(operationName = "GetPkcs10Request", action = "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request")
    @WebResult(name = "Pkcs10Request", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetPkcs10Request", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetPkcs10Request")
    @ResponseWrapper(localName = "GetPkcs10RequestResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetPkcs10RequestResponse")
    public BinaryData getPkcs10Request(
        @WebParam(name = "CertificateID", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String certificateID,
        @WebParam(name = "Subject", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String subject,
        @WebParam(name = "Attributes", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        BinaryData attributes);

    /**
     * 
     * @param nvtCertificate
     */
    @WebMethod(operationName = "LoadCertificates", action = "http://www.onvif.org/ver10/device/wsdl/LoadCertificates")
    @RequestWrapper(localName = "LoadCertificates", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.LoadCertificates")
    @ResponseWrapper(localName = "LoadCertificatesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.LoadCertificatesResponse")
    public void loadCertificates(
        @WebParam(name = "NVTCertificate", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<Certificate> nvtCertificate);

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "GetClientCertificateMode", action = "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode")
    @WebResult(name = "Enabled", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetClientCertificateMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetClientCertificateMode")
    @ResponseWrapper(localName = "GetClientCertificateModeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetClientCertificateModeResponse")
    public boolean getClientCertificateMode();

    /**
     * 
     * @param enabled
     */
    @WebMethod(operationName = "SetClientCertificateMode", action = "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode")
    @RequestWrapper(localName = "SetClientCertificateMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetClientCertificateMode")
    @ResponseWrapper(localName = "SetClientCertificateModeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetClientCertificateModeResponse")
    public void setClientCertificateMode(
        @WebParam(name = "Enabled", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean enabled);

    /**
     * 
     * @return
     *     returns java.util.List<org.onvif.ver10.schema.RelayOutput>
     */
    @WebMethod(operationName = "GetRelayOutputs", action = "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs")
    @WebResult(name = "RelayOutputs", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetRelayOutputs", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetRelayOutputs")
    @ResponseWrapper(localName = "GetRelayOutputsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetRelayOutputsResponse")
    public List<RelayOutput> getRelayOutputs();

    /**
     * 
     * @param relayOutputToken
     * @param properties
     */
    @WebMethod(operationName = "SetRelayOutputSettings", action = "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings")
    @RequestWrapper(localName = "SetRelayOutputSettings", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetRelayOutputSettings")
    @ResponseWrapper(localName = "SetRelayOutputSettingsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetRelayOutputSettingsResponse")
    public void setRelayOutputSettings(
        @WebParam(name = "RelayOutputToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String relayOutputToken,
        @WebParam(name = "Properties", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        RelayOutputSettings properties);

    /**
     * 
     * @param logicalState
     * @param relayOutputToken
     */
    @WebMethod(operationName = "SetRelayOutputState", action = "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState")
    @RequestWrapper(localName = "SetRelayOutputState", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetRelayOutputState")
    @ResponseWrapper(localName = "SetRelayOutputStateResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetRelayOutputStateResponse")
    public void setRelayOutputState(
        @WebParam(name = "RelayOutputToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String relayOutputToken,
        @WebParam(name = "LogicalState", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        RelayLogicalState logicalState);

    /**
     * 
     * @param auxiliaryCommand
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "SendAuxiliaryCommand", action = "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand")
    @WebResult(name = "AuxiliaryCommandResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "SendAuxiliaryCommand", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SendAuxiliaryCommand")
    @ResponseWrapper(localName = "SendAuxiliaryCommandResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SendAuxiliaryCommandResponse")
    public String sendAuxiliaryCommand(
        @WebParam(name = "AuxiliaryCommand", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String auxiliaryCommand);

    /**
     * 
     * @return
     *     returns java.util.List<org.onvif.ver10.schema.Certificate>
     */
    @WebMethod(operationName = "GetCACertificates", action = "http://www.onvif.org/ver10/device/wsdl/GetCACertificates")
    @WebResult(name = "CACertificate", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetCACertificates", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetCACertificates")
    @ResponseWrapper(localName = "GetCACertificatesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetCACertificatesResponse")
    public List<Certificate> getCACertificates();

    /**
     * 
     * @param certificateWithPrivateKey
     */
    @WebMethod(operationName = "LoadCertificateWithPrivateKey", action = "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey")
    @RequestWrapper(localName = "LoadCertificateWithPrivateKey", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.LoadCertificateWithPrivateKey")
    @ResponseWrapper(localName = "LoadCertificateWithPrivateKeyResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.LoadCertificateWithPrivateKeyResponse")
    public void loadCertificateWithPrivateKey(
        @WebParam(name = "CertificateWithPrivateKey", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<CertificateWithPrivateKey> certificateWithPrivateKey);

    /**
     * 
     * @param certificateID
     * @return
     *     returns org.onvif.ver10.schema.CertificateInformation
     */
    @WebMethod(operationName = "GetCertificateInformation", action = "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation")
    @WebResult(name = "CertificateInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetCertificateInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetCertificateInformation")
    @ResponseWrapper(localName = "GetCertificateInformationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetCertificateInformationResponse")
    public CertificateInformation getCertificateInformation(
        @WebParam(name = "CertificateID", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String certificateID);

    /**
     * 
     * @param caCertificate
     */
    @WebMethod(operationName = "LoadCACertificates", action = "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates")
    @RequestWrapper(localName = "LoadCACertificates", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.LoadCACertificates")
    @ResponseWrapper(localName = "LoadCACertificatesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.LoadCACertificatesResponse")
    public void loadCACertificates(
        @WebParam(name = "CACertificate", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<Certificate> caCertificate);

    /**
     * 
     * @param dot1XConfiguration
     */
    @WebMethod(operationName = "CreateDot1XConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration")
    @RequestWrapper(localName = "CreateDot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.CreateDot1XConfiguration")
    @ResponseWrapper(localName = "CreateDot1XConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.CreateDot1XConfigurationResponse")
    public void createDot1XConfiguration(
        @WebParam(name = "Dot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        Dot1XConfiguration dot1XConfiguration);

    /**
     * 
     * @param dot1XConfiguration
     */
    @WebMethod(operationName = "SetDot1XConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration")
    @RequestWrapper(localName = "SetDot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetDot1XConfiguration")
    @ResponseWrapper(localName = "SetDot1XConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetDot1XConfigurationResponse")
    public void setDot1XConfiguration(
        @WebParam(name = "Dot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        Dot1XConfiguration dot1XConfiguration);

    /**
     * 
     * @param dot1XConfigurationToken
     * @return
     *     returns org.onvif.ver10.schema.Dot1XConfiguration
     */
    @WebMethod(operationName = "GetDot1XConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration")
    @WebResult(name = "Dot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetDot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDot1XConfiguration")
    @ResponseWrapper(localName = "GetDot1XConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDot1XConfigurationResponse")
    public Dot1XConfiguration getDot1XConfiguration(
        @WebParam(name = "Dot1XConfigurationToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String dot1XConfigurationToken);

    /**
     * 
     * @return
     *     returns java.util.List<org.onvif.ver10.schema.Dot1XConfiguration>
     */
    @WebMethod(operationName = "GetDot1XConfigurations", action = "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations")
    @WebResult(name = "Dot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetDot1XConfigurations", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDot1XConfigurations")
    @ResponseWrapper(localName = "GetDot1XConfigurationsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDot1XConfigurationsResponse")
    public List<Dot1XConfiguration> getDot1XConfigurations();

    /**
     * 
     * @param dot1XConfigurationToken
     */
    @WebMethod(operationName = "DeleteDot1XConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration")
    @RequestWrapper(localName = "DeleteDot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.DeleteDot1XConfiguration")
    @ResponseWrapper(localName = "DeleteDot1XConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.DeleteDot1XConfigurationResponse")
    public void deleteDot1XConfiguration(
        @WebParam(name = "Dot1XConfigurationToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<String> dot1XConfigurationToken);

    /**
     * This operation returns the IEEE802.11 capabilities. The device shall support
     *                 this operation.
     *             
     * 
     * @param parameters
     * @return
     *     returns org.onvif.ver10.device.wsdl.GetDot11CapabilitiesResponse
     */
    @WebMethod(operationName = "GetDot11Capabilities", action = "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities")
    @WebResult(name = "GetDot11CapabilitiesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", partName = "parameters")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public GetDot11CapabilitiesResponse getDot11Capabilities(
        @WebParam(name = "GetDot11Capabilities", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", partName = "parameters")
        GetDot11Capabilities parameters);

    /**
     * This operation returns the status of a wireless network interface. The device shall
     *                 support this
     *                 command.
     *             
     * 
     * @param interfaceToken
     * @return
     *     returns org.onvif.ver10.schema.Dot11Status
     */
    @WebMethod(operationName = "GetDot11Status", action = "http://www.onvif.org/ver10/device/wsdl/GetDot11Status")
    @WebResult(name = "Status", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetDot11Status", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDot11Status")
    @ResponseWrapper(localName = "GetDot11StatusResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetDot11StatusResponse")
    public Dot11Status getDot11Status(
        @WebParam(name = "InterfaceToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String interfaceToken);

    /**
     * This operation returns a lists of the wireless networks in range of the device. A device
     *                 should
     *                 support this operation.
     *             
     * 
     * @param interfaceToken
     * @return
     *     returns java.util.List<org.onvif.ver10.schema.Dot11AvailableNetworks>
     */
    @WebMethod(operationName = "ScanAvailableDot11Networks", action = "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks")
    @WebResult(name = "Networks", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "ScanAvailableDot11Networks", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.ScanAvailableDot11Networks")
    @ResponseWrapper(localName = "ScanAvailableDot11NetworksResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.ScanAvailableDot11NetworksResponse")
    public List<Dot11AvailableNetworks> scanAvailableDot11Networks(
        @WebParam(name = "InterfaceToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String interfaceToken);

    /**
     * 
     * @param systemLogUris
     * @param systemBackupUri
     * @param extension
     * @param supportInfoUri
     */
    @WebMethod(operationName = "GetSystemUris", action = "http://www.onvif.org/ver10/device/wsdl/GetSystemUris")
    @RequestWrapper(localName = "GetSystemUris", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetSystemUris")
    @ResponseWrapper(localName = "GetSystemUrisResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetSystemUrisResponse")
    public void getSystemUris(
        @WebParam(name = "SystemLogUris", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<SystemLogUriList> systemLogUris,
        @WebParam(name = "SupportInfoUri", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<String> supportInfoUri,
        @WebParam(name = "SystemBackupUri", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<String> systemBackupUri,
        @WebParam(name = "Extension", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<org.onvif.ver10.device.wsdl.GetSystemUrisResponse.Extension> extension);

    /**
     * 
     * @param uploadUri
     * @param expectedDownTime
     * @param uploadDelay
     */
    @WebMethod(operationName = "StartFirmwareUpgrade", action = "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade")
    @RequestWrapper(localName = "StartFirmwareUpgrade", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.StartFirmwareUpgrade")
    @ResponseWrapper(localName = "StartFirmwareUpgradeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.StartFirmwareUpgradeResponse")
    public void startFirmwareUpgrade(
        @WebParam(name = "UploadUri", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<String> uploadUri,
        @WebParam(name = "UploadDelay", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Duration> uploadDelay,
        @WebParam(name = "ExpectedDownTime", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Duration> expectedDownTime);

    /**
     * 
     * @param uploadUri
     * @param expectedDownTime
     */
    @WebMethod(operationName = "StartSystemRestore", action = "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore")
    @RequestWrapper(localName = "StartSystemRestore", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.StartSystemRestore")
    @ResponseWrapper(localName = "StartSystemRestoreResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.StartSystemRestoreResponse")
    public void startSystemRestore(
        @WebParam(name = "UploadUri", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<String> uploadUri,
        @WebParam(name = "ExpectedDownTime", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", mode = WebParam.Mode.OUT)
        Holder<Duration> expectedDownTime);

    /**
     * 
     *                 This operation lists all existing storage configurations for the device.
     *             
     * 
     * @return
     *     returns java.util.List<org.onvif.ver10.device.wsdl.StorageConfiguration>
     */
    @WebMethod(operationName = "GetStorageConfigurations", action = "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations")
    @WebResult(name = "StorageConfigurations", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetStorageConfigurations", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetStorageConfigurations")
    @ResponseWrapper(localName = "GetStorageConfigurationsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetStorageConfigurationsResponse")
    public List<StorageConfiguration> getStorageConfigurations();

    /**
     * 
     *                 This operation creates a new storage configuration.
     *                 The configuration data shall be created in the device and shall be persistent (remain after reboot).
     *             
     * 
     * @param storageConfiguration
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreateStorageConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration")
    @WebResult(name = "Token", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "CreateStorageConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.CreateStorageConfiguration")
    @ResponseWrapper(localName = "CreateStorageConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.CreateStorageConfigurationResponse")
    public String createStorageConfiguration(
        @WebParam(name = "StorageConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        StorageConfigurationData storageConfiguration);

    /**
     * 
     *                 This operation retrieves the Storage configuration associated with the given storage configuration
     *                 token.
     *             
     * 
     * @param token
     * @return
     *     returns org.onvif.ver10.device.wsdl.StorageConfiguration
     */
    @WebMethod(operationName = "GetStorageConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration")
    @WebResult(name = "StorageConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetStorageConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetStorageConfiguration")
    @ResponseWrapper(localName = "GetStorageConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetStorageConfigurationResponse")
    public StorageConfiguration getStorageConfiguration(
        @WebParam(name = "Token", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String token);

    /**
     * 
     *                 This operation modifies an existing Storage configuration.
     *             
     * 
     * @param storageConfiguration
     */
    @WebMethod(operationName = "SetStorageConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration")
    @RequestWrapper(localName = "SetStorageConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetStorageConfiguration")
    @ResponseWrapper(localName = "SetStorageConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetStorageConfigurationResponse")
    public void setStorageConfiguration(
        @WebParam(name = "StorageConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        StorageConfiguration storageConfiguration);

    /**
     * 
     *                 This operation deletes the given storage configuration and configuration change shall always be
     *                 persistent.
     *             
     * 
     * @param token
     */
    @WebMethod(operationName = "DeleteStorageConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration")
    @RequestWrapper(localName = "DeleteStorageConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.DeleteStorageConfiguration")
    @ResponseWrapper(localName = "DeleteStorageConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.DeleteStorageConfigurationResponse")
    public void deleteStorageConfiguration(
        @WebParam(name = "Token", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        String token);

    /**
     * 
     *                 This operation lists all existing geo location configurations for the device.
     *             
     * 
     * @return
     *     returns java.util.List<org.onvif.ver10.schema.LocationEntity>
     */
    @WebMethod(operationName = "GetGeoLocation", action = "http://www.onvif.org/ver10/device/wsdl/GetGeoLocation")
    @WebResult(name = "Location", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    @RequestWrapper(localName = "GetGeoLocation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetGeoLocation")
    @ResponseWrapper(localName = "GetGeoLocationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.GetGeoLocationResponse")
    public List<LocationEntity> getGeoLocation();

    /**
     * 
     *                 This operation allows to modify one or more geo configuration entries.
     *             
     * 
     * @param location
     */
    @WebMethod(operationName = "SetGeoLocation", action = "http://www.onvif.org/ver10/device/wsdl/SetGeoLocation")
    @RequestWrapper(localName = "SetGeoLocation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetGeoLocation")
    @ResponseWrapper(localName = "SetGeoLocationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetGeoLocationResponse")
    public void setGeoLocation(
        @WebParam(name = "Location", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<LocationEntity> location);

    /**
     * 
     *                 This operation deletes the given geo location entries.
     *             
     * 
     * @param location
     */
    @WebMethod(operationName = "DeleteGeoLocation", action = "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation")
    @RequestWrapper(localName = "DeleteGeoLocation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.DeleteGeoLocation")
    @ResponseWrapper(localName = "DeleteGeoLocationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.DeleteGeoLocationResponse")
    public void deleteGeoLocation(
        @WebParam(name = "Location", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<LocationEntity> location);

    /**
     * 
     *                 This operation sets the hashing algorithm(s) used in HTTP and RTSP Digest Authentication.
     *             
     * 
     * @param algorithm
     */
    @WebMethod(operationName = "SetHashingAlgorithm", action = "http://www.onvif.org/ver10/device/wsdl/SetHashingAlgorithm")
    @RequestWrapper(localName = "SetHashingAlgorithm", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetHashingAlgorithm")
    @ResponseWrapper(localName = "SetHashingAlgorithmResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "org.onvif.ver10.device.wsdl.SetHashingAlgorithmResponse")
    public void setHashingAlgorithm(
        @WebParam(name = "Algorithm", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        List<String> algorithm);

}
