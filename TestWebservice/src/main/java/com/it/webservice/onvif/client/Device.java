package com.it.webservice.onvif.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.5.4
 * 2023-03-14T00:13:23.428+08:00
 * Generated source version: 3.5.4
 *
 */
@WebService(targetNamespace = "http://www.onvif.org/ver10/device/wsdl", name = "Device")
@XmlSeeAlso({ObjectFactory.class})
public interface Device {

    /**
     * This operation initiates a firmware upgrade using the HTTP POST mechanism. The response
     *                 to the command includes an HTTP URL to which the upgrade file may be uploaded. The
     *                 actual upgrade takes place as soon as the HTTP POST operation has completed. The device
     *                 should support firmware upgrade through the StartFirmwareUpgrade command. The exact
     *                 format of the firmware data is outside the scope of this specification.
     *                 Firmware upgrade over HTTP may be achieved using the following steps:
     *                 
     *                 If the firmware upgrade fails because the upgrade file was invalid, the HTTP POST response
     *                 shall be “415 Unsupported Media Type”. If the firmware upgrade fails due to an error at the
     *                 device, the HTTP POST response shall be “500 Internal Server Error”.
     *                 
     *                 The value of the Content-Type header in the HTTP POST request shall be “application/octetstream”.
     *             
     */
    @WebMethod(operationName = "StartFirmwareUpgrade", action = "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade")
    @RequestWrapper(localName = "StartFirmwareUpgrade", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.StartFirmwareUpgrade")
    @ResponseWrapper(localName = "StartFirmwareUpgradeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.StartFirmwareUpgradeResponse")
    public void startFirmwareUpgrade(

        @WebParam(mode = WebParam.Mode.OUT, name = "UploadUri", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.String> uploadUri,
        @WebParam(mode = WebParam.Mode.OUT, name = "UploadDelay", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<javax.xml.datatype.Duration> uploadDelay,
        @WebParam(mode = WebParam.Mode.OUT, name = "ExpectedDownTime", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<javax.xml.datatype.Duration> expectedDownTime
    );

    /**
     * This operation gets the zero-configuration from a device. If the device supports dynamic
     *                 IP
     *                 configuration according to [RFC3927], it shall support the return of IPv4 zero configuration
     *                 address and status through the GetZeroConfiguration command.
     *                 
     *                 Devices supporting zero configuration on more than one interface shall use the extension to list the
     *                 additional interface settings.
     *             
     */
    @WebMethod(operationName = "GetZeroConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration")
    @RequestWrapper(localName = "GetZeroConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetZeroConfiguration")
    @ResponseWrapper(localName = "GetZeroConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetZeroConfigurationResponse")
    @WebResult(name = "ZeroConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public NetworkZeroConfiguration getZeroConfiguration()
;

    @WebMethod(operationName = "GetClientCertificateMode", action = "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode")
    @RequestWrapper(localName = "GetClientCertificateMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetClientCertificateMode")
    @ResponseWrapper(localName = "GetClientCertificateModeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetClientCertificateModeResponse")
    @WebResult(name = "Enabled", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public boolean getClientCertificateMode()
;

    /**
     * This operation gets the NTP settings from a device. If the device supports NTP, it shall
     *                 be
     *                 possible to get the NTP server settings through the GetNTP command.
     *             
     */
    @WebMethod(operationName = "GetNTP", action = "http://www.onvif.org/ver10/device/wsdl/GetNTP")
    @RequestWrapper(localName = "GetNTP", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetNTP")
    @ResponseWrapper(localName = "GetNTPResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetNTPResponse")
    @WebResult(name = "NTPInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public NTPInformation getNTP()
;

    @WebMethod(operationName = "LoadCertificateWithPrivateKey", action = "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey")
    @RequestWrapper(localName = "LoadCertificateWithPrivateKey", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.LoadCertificateWithPrivateKey")
    @ResponseWrapper(localName = "LoadCertificateWithPrivateKeyResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.LoadCertificateWithPrivateKeyResponse")
    public void loadCertificateWithPrivateKey(

        @WebParam(name = "CertificateWithPrivateKey", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<CertificateWithPrivateKey> certificateWithPrivateKey
    );

    /**
     * This operation updates the settings for one or several users on a device for
     *                 authentication purposes.
     *                 The device shall support update of device users and their credentials through the SetUser command.
     *                 Either all change requests are processed successfully or a fault message shall be returned and no change
     *                 requests be processed.
     *             
     */
    @WebMethod(operationName = "SetUser", action = "http://www.onvif.org/ver10/device/wsdl/SetUser")
    @RequestWrapper(localName = "SetUser", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetUser")
    @ResponseWrapper(localName = "SetUserResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetUserResponse")
    public void setUser(

        @WebParam(name = "User", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<User> user
    );

    /**
     * This method allows retrieval of the current authentication failure warning configuration
     *                 settings.
     *             
     */
    @WebMethod(operationName = "GetAuthFailureWarningConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningConfiguration")
    @RequestWrapper(localName = "GetAuthFailureWarningConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetAuthFailureWarningConfiguration")
    @ResponseWrapper(localName = "GetAuthFailureWarningConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetAuthFailureWarningConfigurationResponse")
    public void getAuthFailureWarningConfiguration(

        @WebParam(mode = WebParam.Mode.OUT, name = "Enabled", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.Boolean> enabled,
        @WebParam(mode = WebParam.Mode.OUT, name = "MonitorPeriod", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.Integer> monitorPeriod,
        @WebParam(mode = WebParam.Mode.OUT, name = "MaxAuthFailures", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.Integer> maxAuthFailures
    );

    /**
     * This operation gets the device system date and time. The device shall support the return
     *                 of
     *                 the daylight saving setting and of the manual system date and time (if applicable) or indication
     *                 of NTP time (if applicable) through the GetSystemDateAndTime command.
     *                 
     *                 A device shall provide the UTCDateTime information.
     *             
     */
    @WebMethod(operationName = "GetSystemDateAndTime", action = "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime")
    @RequestWrapper(localName = "GetSystemDateAndTime", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetSystemDateAndTime")
    @ResponseWrapper(localName = "GetSystemDateAndTimeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetSystemDateAndTimeResponse")
    @WebResult(name = "SystemDateAndTime", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public SystemDateTime getSystemDateAndTime()
;

    /**
     * This operation sets the NTP settings on a device. If the device supports NTP, it shall
     *                 be
     *                 possible to set the NTP server settings through the SetNTP command.
     *                 
     *                 A device shall accept string formated according to RFC 1123 section 2.1 or alternatively to RFC 952,
     *                 other string shall be considered as invalid strings.
     *                 
     *                 Changes to the NTP server list will not affect the clock mode DateTimeType. Use SetSystemDateAndTime to
     *                 activate NTP operation.
     *             
     */
    @WebMethod(operationName = "SetNTP", action = "http://www.onvif.org/ver10/device/wsdl/SetNTP")
    @RequestWrapper(localName = "SetNTP", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetNTP")
    @ResponseWrapper(localName = "SetNTPResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetNTPResponse")
    public void setNTP(

        @WebParam(name = "FromDHCP", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean fromDHCP,
        @WebParam(name = "NTPManual", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<NetworkHost> ntpManual
    );

    /**
     * This operation sets the network interface configuration on a device. The device shall
     *                 support
     *                 network configuration of supported network interfaces through the SetNetworkInterfaces
     *                 command.
     *                 
     *                 For interoperability with a client unaware of the IEEE 802.11 extension a device shall retain
     *                 its IEEE 802.11 configuration if the IEEE 802.11 configuration element isn’t present in the
     *                 request.
     *             
     */
    @WebMethod(operationName = "SetNetworkInterfaces", action = "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces")
    @RequestWrapper(localName = "SetNetworkInterfaces", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetNetworkInterfaces")
    @ResponseWrapper(localName = "SetNetworkInterfacesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetNetworkInterfacesResponse")
    @WebResult(name = "RebootNeeded", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public boolean setNetworkInterfaces(

        @WebParam(name = "InterfaceToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String interfaceToken,
        @WebParam(name = "NetworkInterface", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        NetworkInterfaceSetConfiguration networkInterface
    );

    /**
     * This operation sets the remote DP address or addresses on a device. If the device
     *                 supports
     *                 remote discovery, as specified in Section 7.4, the device shall support configuration of the
     *                 remote DP address(es) through the SetDPAddresses command.
     *             
     */
    @WebMethod(operationName = "SetDPAddresses", action = "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses")
    @RequestWrapper(localName = "SetDPAddresses", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetDPAddresses")
    @ResponseWrapper(localName = "SetDPAddressesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetDPAddressesResponse")
    public void setDPAddresses(

        @WebParam(name = "DPAddress", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<NetworkHost> dpAddress
    );

    /**
     * This operation gets arbitary device diagnostics information from the device.
     *             
     */
    @WebMethod(operationName = "GetSystemSupportInformation", action = "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation")
    @RequestWrapper(localName = "GetSystemSupportInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetSystemSupportInformation")
    @ResponseWrapper(localName = "GetSystemSupportInformationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetSystemSupportInformationResponse")
    @WebResult(name = "SupportInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public SupportInformation getSystemSupportInformation()
;

    /**
     * This operation deletes an IP filter address from a device. If the device supports device
     *                 access
     *                 control based on IP filtering rules (denied or accepted ranges of IP addresses), the device
     *                 shall support deletion of IP filtering addresses through the RemoveIPAddressFilter command.
     *             
     */
    @WebMethod(operationName = "RemoveIPAddressFilter", action = "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter")
    @RequestWrapper(localName = "RemoveIPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.RemoveIPAddressFilter")
    @ResponseWrapper(localName = "RemoveIPAddressFilterResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.RemoveIPAddressFilterResponse")
    public void removeIPAddressFilter(

        @WebParam(name = "IPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        IPAddressFilter ipAddressFilter
    );

    /**
     * This operation sets the device system date and time. The device shall support the
     *                 configuration of the daylight saving setting and of the manual system date and time (if
     *                 applicable) or indication of NTP time (if applicable) through the SetSystemDateAndTime
     *                 command.
     *                 
     *                 If system time and date are set manually, the client shall include UTCDateTime in the request.
     *                 
     *                 A TimeZone token which is not formed according to the rules of IEEE 1003.1 section 8.3 is considered as
     *                 invalid timezone.
     *                 
     *                 The DayLightSavings flag should be set to true to activate any DST settings of the TimeZone string.
     *                 Clear the DayLightSavings flag if the DST portion of the TimeZone settings should be ignored.
     *             
     */
    @WebMethod(operationName = "SetSystemDateAndTime", action = "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime")
    @RequestWrapper(localName = "SetSystemDateAndTime", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetSystemDateAndTime")
    @ResponseWrapper(localName = "SetSystemDateAndTimeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetSystemDateAndTimeResponse")
    public void setSystemDateAndTime(

        @WebParam(name = "DateTimeType", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        SetDateTimeType dateTimeType,
        @WebParam(name = "DaylightSavings", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean daylightSavings,
        @WebParam(name = "TimeZone", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        TimeZone timeZone,
        @WebParam(name = "UTCDateTime", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        DateTime utcDateTime
    );

    @WebMethod(operationName = "CreateDot1XConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration")
    @RequestWrapper(localName = "CreateDot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.CreateDot1XConfiguration")
    @ResponseWrapper(localName = "CreateDot1XConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.CreateDot1XConfigurationResponse")
    public void createDot1XConfiguration(

        @WebParam(name = "Dot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        Dot1XConfiguration dot1XConfiguration
    );

    /**
     * This operation deletes scope-configurable scope parameters from a device. The scope
     *                 parameters are used in the device discovery to match a probe message, see Section 7. The
     *                 device shall support deletion of discovery scope parameters through the RemoveScopes
     *                 command.
     *                 Table
     *             
     */
    @WebMethod(operationName = "RemoveScopes", action = "http://www.onvif.org/ver10/device/wsdl/RemoveScopes")
    @RequestWrapper(localName = "RemoveScopes", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.RemoveScopes")
    @ResponseWrapper(localName = "RemoveScopesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.RemoveScopesResponse")
    public void removeScopes(

        @WebParam(mode = WebParam.Mode.INOUT, name = "ScopeItem", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.util.List<java.lang.String>> scopeItem
    );

    /**
     * This operation gets the dynamic DNS settings from a device. If the device supports
     *                 dynamic
     *                 DNS as specified in [RFC 2136] and [RFC 4702], it shall be possible to get the type, name
     *                 and TTL through the GetDynamicDNS command.
     *             
     */
    @WebMethod(operationName = "GetDynamicDNS", action = "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS")
    @RequestWrapper(localName = "GetDynamicDNS", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDynamicDNS")
    @ResponseWrapper(localName = "GetDynamicDNSResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDynamicDNSResponse")
    @WebResult(name = "DynamicDNSInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public DynamicDNSInformation getDynamicDNS()
;

    /**
     * This operation sets the discovery mode operation of a device. See Section 7.2 for the
     *                 definition of the different device discovery modes. The device shall support configuration of
     *                 the discovery mode setting through the SetDiscoveryMode command.
     *             
     */
    @WebMethod(operationName = "SetDiscoveryMode", action = "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode")
    @RequestWrapper(localName = "SetDiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetDiscoveryMode")
    @ResponseWrapper(localName = "SetDiscoveryModeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetDiscoveryModeResponse")
    public void setDiscoveryMode(

        @WebParam(name = "DiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        DiscoveryMode discoveryMode
    );

    @WebMethod(operationName = "CreateCertificate", action = "http://www.onvif.org/ver10/device/wsdl/CreateCertificate")
    @RequestWrapper(localName = "CreateCertificate", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.CreateCertificate")
    @ResponseWrapper(localName = "CreateCertificateResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.CreateCertificateResponse")
    @WebResult(name = "NvtCertificate", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public Certificate createCertificate(

        @WebParam(name = "CertificateID", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String certificateID,
        @WebParam(name = "Subject", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String subject,
        @WebParam(name = "ValidNotBefore", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.datatype.XMLGregorianCalendar validNotBefore,
        @WebParam(name = "ValidNotAfter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.datatype.XMLGregorianCalendar validNotAfter
    );

    /**
     * This operation gets the network interface configuration from a device. The device shall
     *                 support return of network interface configuration settings as defined by the NetworkInterface
     *                 type through the GetNetworkInterfaces command.
     *             
     */
    @WebMethod(operationName = "GetNetworkInterfaces", action = "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces")
    @RequestWrapper(localName = "GetNetworkInterfaces", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetNetworkInterfaces")
    @ResponseWrapper(localName = "GetNetworkInterfacesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetNetworkInterfacesResponse")
    @WebResult(name = "NetworkInterfaces", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.util.List<NetworkInterface> getNetworkInterfaces()
;

    /**
     * This operation sets the default gateway settings on a device. The device shall support
     *                 configuration of default gateway through the SetNetworkDefaultGateway command.
     *             
     */
    @WebMethod(operationName = "SetNetworkDefaultGateway", action = "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway")
    @RequestWrapper(localName = "SetNetworkDefaultGateway", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetNetworkDefaultGateway")
    @ResponseWrapper(localName = "SetNetworkDefaultGatewayResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetNetworkDefaultGatewayResponse")
    public void setNetworkDefaultGateway(

        @WebParam(name = "IPv4Address", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<java.lang.String> iPv4Address,
        @WebParam(name = "IPv6Address", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<java.lang.String> iPv6Address
    );

    /**
     * This operation controls whether the hostname is set manually or retrieved via DHCP.
     *             
     */
    @WebMethod(operationName = "SetHostnameFromDHCP", action = "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP")
    @RequestWrapper(localName = "SetHostnameFromDHCP", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetHostnameFromDHCP")
    @ResponseWrapper(localName = "SetHostnameFromDHCPResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetHostnameFromDHCPResponse")
    @WebResult(name = "RebootNeeded", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public boolean setHostnameFromDHCP(

        @WebParam(name = "FromDHCP", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean fromDHCP
    );

    @WebMethod(operationName = "GetDot1XConfigurations", action = "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations")
    @RequestWrapper(localName = "GetDot1XConfigurations", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDot1XConfigurations")
    @ResponseWrapper(localName = "GetDot1XConfigurationsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDot1XConfigurationsResponse")
    @WebResult(name = "Dot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.util.List<Dot1XConfiguration> getDot1XConfigurations()
;

    /**
     * This operation initiates a system restore from backed up configuration data using the
     *                 HTTP
     *                 POST mechanism. The response to the command includes an HTTP URL to which the backup
     *                 file may be uploaded. The actual restore takes place as soon as the HTTP POST operation
     *                 has completed. Devices should support system restore through the StartSystemRestore
     *                 command. The exact format of the backup configuration data is outside the scope of this
     *                 specification.
     *                 
     *                 System restore over HTTP may be achieved using the following steps:
     *                 
     *                 If the system restore fails because the uploaded file was invalid, the HTTP POST response
     *                 shall be “415 Unsupported Media Type”. If the system restore fails due to an error at the
     *                 device, the HTTP POST response shall be “500 Internal Server Error”.
     *                 
     *                 The value of the Content-Type header in the HTTP POST request shall be “application/octetstream”.
     *             
     */
    @WebMethod(operationName = "StartSystemRestore", action = "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore")
    @RequestWrapper(localName = "StartSystemRestore", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.StartSystemRestore")
    @ResponseWrapper(localName = "StartSystemRestoreResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.StartSystemRestoreResponse")
    public void startSystemRestore(

        @WebParam(mode = WebParam.Mode.OUT, name = "UploadUri", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.String> uploadUri,
        @WebParam(mode = WebParam.Mode.OUT, name = "ExpectedDownTime", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<javax.xml.datatype.Duration> expectedDownTime
    );

    /**
     * This operation sets the hostname on a device. It shall be possible to set the device
     *                 hostname
     *                 configurations through the SetHostname command.
     *                 
     *                 A device shall accept string formated according to RFC 1123 section 2.1 or alternatively to RFC 952,
     *                 other string shall be considered as invalid strings.
     *             
     */
    @WebMethod(operationName = "SetHostname", action = "http://www.onvif.org/ver10/device/wsdl/SetHostname")
    @RequestWrapper(localName = "SetHostname", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetHostname")
    @ResponseWrapper(localName = "SetHostnameResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetHostnameResponse")
    public void setHostname(

        @WebParam(name = "Name", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String name
    );

    /**
     * This operation gets the IP address filter settings from a device. If the device supports
     *                 device
     *                 access control based on IP filtering rules (denied or accepted ranges of IP addresses), the
     *                 device shall support the GetIPAddressFilter command.
     *             
     */
    @WebMethod(operationName = "GetIPAddressFilter", action = "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter")
    @RequestWrapper(localName = "GetIPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetIPAddressFilter")
    @ResponseWrapper(localName = "GetIPAddressFilterResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetIPAddressFilterResponse")
    @WebResult(name = "IPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public IPAddressFilter getIPAddressFilter()
;

    /**
     * This operation returns the configured remote user (if any). A device supporting remote
     *                 user
     *                 handling shall support this operation. The user is only valid for the WS-UserToken profile or
     *                 as a HTTP / RTSP user.
     *                 
     *                 The algorithm to use for deriving the password is described in section 5.12.2.1 of the core
     *                 specification.
     *             
     */
    @WebMethod(operationName = "GetRemoteUser", action = "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser")
    @RequestWrapper(localName = "GetRemoteUser", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetRemoteUser")
    @ResponseWrapper(localName = "GetRemoteUserResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetRemoteUserResponse")
    @WebResult(name = "RemoteUser", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public RemoteUser getRemoteUser()
;

    /**
     * Returns the capabilities of the device service. The result is returned in a typed
     *                 answer.
     *             
     */
    @WebMethod(operationName = "GetServiceCapabilities", action = "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities")
    @RequestWrapper(localName = "GetServiceCapabilities", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetServiceCapabilities")
    @ResponseWrapper(localName = "GetServiceCapabilitiesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetServiceCapabilitiesResponse")
    @WebResult(name = "Capabilities", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public DeviceServiceCapabilities getServiceCapabilities()
;

    /**
     * This operation adds an IP filter address to a device. If the device supports device
     *                 access
     *                 control based on IP filtering rules (denied or accepted ranges of IP addresses), the device
     *                 shall support adding of IP filtering addresses through the AddIPAddressFilter command.
     *             
     */
    @WebMethod(operationName = "AddIPAddressFilter", action = "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter")
    @RequestWrapper(localName = "AddIPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.AddIPAddressFilter")
    @ResponseWrapper(localName = "AddIPAddressFilterResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.AddIPAddressFilterResponse")
    public void addIPAddressFilter(

        @WebParam(name = "IPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        IPAddressFilter ipAddressFilter
    );

    /**
     * This operation gets the DNS settings from a device. The device shall return its DNS
     *                 configurations through the GetDNS command.
     *             
     */
    @WebMethod(operationName = "GetDNS", action = "http://www.onvif.org/ver10/device/wsdl/GetDNS")
    @RequestWrapper(localName = "GetDNS", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDNS")
    @ResponseWrapper(localName = "GetDNSResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDNSResponse")
    @WebResult(name = "DNSInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public DNSInformation getDNS()
;

    /**
     * This method allows setting of the password complexity configuration.
     *             
     */
    @WebMethod(operationName = "SetPasswordComplexityConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/SetPasswordComplexityConfiguration")
    @RequestWrapper(localName = "SetPasswordComplexityConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetPasswordComplexityConfiguration")
    @ResponseWrapper(localName = "SetPasswordComplexityConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetPasswordComplexityConfigurationResponse")
    public void setPasswordComplexityConfiguration(

        @WebParam(name = "MinLen", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.Integer minLen,
        @WebParam(name = "Uppercase", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.Integer uppercase,
        @WebParam(name = "Number", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.Integer number,
        @WebParam(name = "SpecialChars", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.Integer specialChars,
        @WebParam(name = "BlockUsernameOccurrence", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.Boolean blockUsernameOccurrence,
        @WebParam(name = "PolicyConfigurationLocked", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.Boolean policyConfigurationLocked
    );

    /**
     * This operation sets the state of a relay output.
     *                 This method has been depricated with version 2.0. Refer to the DeviceIO service.
     *             
     */
    @WebMethod(operationName = "SetRelayOutputState", action = "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState")
    @RequestWrapper(localName = "SetRelayOutputState", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetRelayOutputState")
    @ResponseWrapper(localName = "SetRelayOutputStateResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetRelayOutputStateResponse")
    public void setRelayOutputState(

        @WebParam(name = "RelayOutputToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String relayOutputToken,
        @WebParam(name = "LogicalState", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        RelayLogicalState logicalState
    );

    /**
     * This operation lists all existing geo location configurations for the device.
     *             
     */
    @WebMethod(operationName = "GetGeoLocation", action = "http://www.onvif.org/ver10/device/wsdl/GetGeoLocation")
    @RequestWrapper(localName = "GetGeoLocation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetGeoLocation")
    @ResponseWrapper(localName = "GetGeoLocationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetGeoLocationResponse")
    @WebResult(name = "Location", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.util.List<LocationEntity> getGeoLocation()
;

    /**
     * This operation sets the DNS settings on a device. It shall be possible to set the device
     *                 DNS
     *                 configurations through the SetDNS command.
     *             
     */
    @WebMethod(operationName = "SetDNS", action = "http://www.onvif.org/ver10/device/wsdl/SetDNS")
    @RequestWrapper(localName = "SetDNS", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetDNS")
    @ResponseWrapper(localName = "SetDNSResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetDNSResponse")
    public void setDNS(

        @WebParam(name = "FromDHCP", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean fromDHCP,
        @WebParam(name = "SearchDomain", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<java.lang.String> searchDomain,
        @WebParam(name = "DNSManual", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<IPAddress> dnsManual
    );

    /**
     * This operation reboots the device.
     */
    @WebMethod(operationName = "SystemReboot", action = "http://www.onvif.org/ver10/device/wsdl/SystemReboot")
    @RequestWrapper(localName = "SystemReboot", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SystemReboot")
    @ResponseWrapper(localName = "SystemRebootResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SystemRebootResponse")
    @WebResult(name = "Message", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.lang.String systemReboot()
;

    /**
     * This operation is used by an endpoint to get the hostname from a device. The device
     *                 shall
     *                 return its hostname configurations through the GetHostname command.
     *             
     */
    @WebMethod(operationName = "GetHostname", action = "http://www.onvif.org/ver10/device/wsdl/GetHostname")
    @RequestWrapper(localName = "GetHostname", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetHostname")
    @ResponseWrapper(localName = "GetHostnameResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetHostnameResponse")
    @WebResult(name = "HostnameInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public HostnameInformation getHostname()
;

    /**
     * This method has been replaced by the more generic GetServices method.
     *                 For capabilities of individual services refer to the GetServiceCapabilities methods.
     *             
     */
    @WebMethod(operationName = "GetCapabilities", action = "http://www.onvif.org/ver10/device/wsdl/GetCapabilities")
    @RequestWrapper(localName = "GetCapabilities", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetCapabilities")
    @ResponseWrapper(localName = "GetCapabilitiesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetCapabilitiesResponse")
    @WebResult(name = "Capabilities", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public Capabilities getCapabilities(

        @WebParam(name = "Category", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<CapabilityCategory> category
    );

    /**
     * This operation configures defined network protocols on a device. The device shall
     *                 support
     *                 configuration of defined network protocols through the SetNetworkProtocols command.
     *             
     */
    @WebMethod(operationName = "SetNetworkProtocols", action = "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols")
    @RequestWrapper(localName = "SetNetworkProtocols", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetNetworkProtocols")
    @ResponseWrapper(localName = "SetNetworkProtocolsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetNetworkProtocolsResponse")
    public void setNetworkProtocols(

        @WebParam(name = "NetworkProtocols", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<NetworkProtocol> networkProtocols
    );

    /**
     * This operation retrieves the Storage configuration associated with the given storage configuration
     * token.
     *             
     */
    @WebMethod(operationName = "GetStorageConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration")
    @RequestWrapper(localName = "GetStorageConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetStorageConfiguration")
    @ResponseWrapper(localName = "GetStorageConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetStorageConfigurationResponse")
    @WebResult(name = "StorageConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public StorageConfiguration getStorageConfiguration(

        @WebParam(name = "Token", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String token
    );

    /**
     * This operation allows to modify one or more geo configuration entries.
     *             
     */
    @WebMethod(operationName = "SetGeoLocation", action = "http://www.onvif.org/ver10/device/wsdl/SetGeoLocation")
    @RequestWrapper(localName = "SetGeoLocation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetGeoLocation")
    @ResponseWrapper(localName = "SetGeoLocationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetGeoLocationResponse")
    public void setGeoLocation(

        @WebParam(name = "Location", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<LocationEntity> location
    );

    /**
     * This operation sets the IP address filter settings on a device. If the device supports
     *                 device
     *                 access control based on IP filtering rules (denied or accepted ranges of IP addresses), the
     *                 device shall support configuration of IP filtering rules through the SetIPAddressFilter
     *                 command.
     *             
     */
    @WebMethod(operationName = "SetIPAddressFilter", action = "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter")
    @RequestWrapper(localName = "SetIPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetIPAddressFilter")
    @ResponseWrapper(localName = "SetIPAddressFilterResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetIPAddressFilterResponse")
    public void setIPAddressFilter(

        @WebParam(name = "IPAddressFilter", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        IPAddressFilter ipAddressFilter
    );

    /**
     * This operation gets defined network protocols from a device. The device shall support
     *                 the
     *                 GetNetworkProtocols command returning configured network protocols.
     *             
     */
    @WebMethod(operationName = "GetNetworkProtocols", action = "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols")
    @RequestWrapper(localName = "GetNetworkProtocols", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetNetworkProtocols")
    @ResponseWrapper(localName = "GetNetworkProtocolsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetNetworkProtocolsResponse")
    @WebResult(name = "NetworkProtocols", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.util.List<NetworkProtocol> getNetworkProtocols()
;

    /**
     * This method allows retrieval of the current password complexity configuration
     *                 settings.
     *             
     */
    @WebMethod(operationName = "GetPasswordComplexityConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityConfiguration")
    @RequestWrapper(localName = "GetPasswordComplexityConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetPasswordComplexityConfiguration")
    @ResponseWrapper(localName = "GetPasswordComplexityConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetPasswordComplexityConfigurationResponse")
    public void getPasswordComplexityConfiguration(

        @WebParam(mode = WebParam.Mode.OUT, name = "MinLen", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.Integer> minLen,
        @WebParam(mode = WebParam.Mode.OUT, name = "Uppercase", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.Integer> uppercase,
        @WebParam(mode = WebParam.Mode.OUT, name = "Number", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.Integer> number,
        @WebParam(mode = WebParam.Mode.OUT, name = "SpecialChars", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.Integer> specialChars,
        @WebParam(mode = WebParam.Mode.OUT, name = "BlockUsernameOccurrence", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.Boolean> blockUsernameOccurrence,
        @WebParam(mode = WebParam.Mode.OUT, name = "PolicyConfigurationLocked", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.Boolean> policyConfigurationLocked
    );

    /**
     * This method allows to provide a URL where product specific WSDL and schema definitions
     *                 can be retrieved. This method is deprecated.
     *             
     */
    @WebMethod(operationName = "GetWsdlUrl", action = "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl")
    @RequestWrapper(localName = "GetWsdlUrl", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetWsdlUrl")
    @ResponseWrapper(localName = "GetWsdlUrlResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetWsdlUrlResponse")
    @WebResult(name = "WsdlUrl", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.lang.String getWsdlUrl()
;

    /**
     * This operation deletes the given storage configuration and configuration change shall always be
     * persistent.
     *             
     */
    @WebMethod(operationName = "DeleteStorageConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration")
    @RequestWrapper(localName = "DeleteStorageConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.DeleteStorageConfiguration")
    @ResponseWrapper(localName = "DeleteStorageConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.DeleteStorageConfigurationResponse")
    public void deleteStorageConfiguration(

        @WebParam(name = "Token", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String token
    );

    /**
     * This operation sets the zero-configuration. Use GetCapalities to get if
     *                 zero-zero-configuration is supported or not.
     *             
     */
    @WebMethod(operationName = "SetZeroConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration")
    @RequestWrapper(localName = "SetZeroConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetZeroConfiguration")
    @ResponseWrapper(localName = "SetZeroConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetZeroConfigurationResponse")
    public void setZeroConfiguration(

        @WebParam(name = "InterfaceToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String interfaceToken,
        @WebParam(name = "Enabled", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean enabled
    );

    /**
     * This operation returns the status of a wireless network interface. The device shall
     *                 support this
     *                 command.
     *             
     */
    @WebMethod(operationName = "GetDot11Status", action = "http://www.onvif.org/ver10/device/wsdl/GetDot11Status")
    @RequestWrapper(localName = "GetDot11Status", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDot11Status")
    @ResponseWrapper(localName = "GetDot11StatusResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDot11StatusResponse")
    @WebResult(name = "Status", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public Dot11Status getDot11Status(

        @WebParam(name = "InterfaceToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String interfaceToken
    );

    /**
     * Returns information about services on the device.
     */
    @WebMethod(operationName = "GetServices", action = "http://www.onvif.org/ver10/device/wsdl/GetServices")
    @RequestWrapper(localName = "GetServices", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetServices")
    @ResponseWrapper(localName = "GetServicesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetServicesResponse")
    @WebResult(name = "Service", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.util.List<Service> getServices(

        @WebParam(name = "IncludeCapability", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean includeCapability
    );

    /**
     * This operation deletes the given geo location entries.
     *             
     */
    @WebMethod(operationName = "DeleteGeoLocation", action = "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation")
    @RequestWrapper(localName = "DeleteGeoLocation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.DeleteGeoLocation")
    @ResponseWrapper(localName = "DeleteGeoLocationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.DeleteGeoLocationResponse")
    public void deleteGeoLocation(

        @WebParam(name = "Location", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<LocationEntity> location
    );

    @WebMethod(operationName = "SetClientCertificateMode", action = "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode")
    @RequestWrapper(localName = "SetClientCertificateMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetClientCertificateMode")
    @ResponseWrapper(localName = "SetClientCertificateModeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetClientCertificateModeResponse")
    public void setClientCertificateMode(

        @WebParam(name = "Enabled", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean enabled
    );

    /**
     * This operation sets the remote discovery mode of operation of a device. See Section 7.4
     *                 for
     *                 the definition of remote discovery remote extensions. A device that supports remote discovery
     *                 shall support configuration of the discovery mode setting through the
     *                 SetRemoteDiscoveryMode command.
     *             
     */
    @WebMethod(operationName = "SetRemoteDiscoveryMode", action = "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode")
    @RequestWrapper(localName = "SetRemoteDiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetRemoteDiscoveryMode")
    @ResponseWrapper(localName = "SetRemoteDiscoveryModeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetRemoteDiscoveryModeResponse")
    public void setRemoteDiscoveryMode(

        @WebParam(name = "RemoteDiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        DiscoveryMode remoteDiscoveryMode
    );

    /**
     * This operation creates new device users and corresponding credentials on a device for
     *                 authentication purposes.
     *                 The device shall support creation of device users and their credentials through the CreateUsers
     *                 command. Either all users are created successfully or a fault message shall be returned
     *                 without creating any user.
     *                 
     *                 ONVIF compliant devices are recommended to support password length of at least 28 bytes,
     *                 as clients may follow the password derivation mechanism which results in 'password
     *                 equivalent' of length 28 bytes, as described in section 3.1.2 of the ONVIF security white paper.
     *             
     */
    @WebMethod(operationName = "CreateUsers", action = "http://www.onvif.org/ver10/device/wsdl/CreateUsers")
    @RequestWrapper(localName = "CreateUsers", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.CreateUsers")
    @ResponseWrapper(localName = "CreateUsersResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.CreateUsersResponse")
    public void createUsers(

        @WebParam(name = "User", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<User> user
    );

    /**
     * This operation sets the scope parameters of a device. The scope parameters are used in
     *                 the
     *                 device discovery to match a probe message.
     *                 This operation replaces all existing configurable scope parameters (not fixed parameters). If
     *                 this shall be avoided, one should use the scope add command instead. The device shall
     *                 support configuration of discovery scope parameters through the SetScopes command.
     *             
     */
    @WebMethod(operationName = "SetScopes", action = "http://www.onvif.org/ver10/device/wsdl/SetScopes")
    @RequestWrapper(localName = "SetScopes", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetScopes")
    @ResponseWrapper(localName = "SetScopesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetScopesResponse")
    public void setScopes(

        @WebParam(name = "Scopes", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<java.lang.String> scopes
    );

    /**
     * This operation gets the default gateway settings from a device. The device shall support
     *                 the
     *                 GetNetworkDefaultGateway command returning configured default gateway address(es).
     *             
     */
    @WebMethod(operationName = "GetNetworkDefaultGateway", action = "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway")
    @RequestWrapper(localName = "GetNetworkDefaultGateway", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetNetworkDefaultGateway")
    @ResponseWrapper(localName = "GetNetworkDefaultGatewayResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetNetworkDefaultGatewayResponse")
    @WebResult(name = "NetworkGateway", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public NetworkGateway getNetworkDefaultGateway()
;

    /**
     * This operation gets the discovery mode of a device. See Section 7.2 for the definition
     *                 of the
     *                 different device discovery modes. The device shall support retrieval of the discovery mode
     *                 setting through the GetDiscoveryMode command.
     *             
     */
    @WebMethod(operationName = "GetDiscoveryMode", action = "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode")
    @RequestWrapper(localName = "GetDiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDiscoveryMode")
    @ResponseWrapper(localName = "GetDiscoveryModeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDiscoveryModeResponse")
    @WebResult(name = "DiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public DiscoveryMode getDiscoveryMode()
;

    /**
     * Access to different services and sub-sets of services should be subject to access
     *                 control. The
     *                 WS-Security framework gives the prerequisite for end-point authentication. Authorization
     *                 decisions can then be taken using an access security policy. This standard does not mandate
     *                 any particular policy description format or security policy but this is up to the device
     *                 manufacturer or system provider to choose policy and policy description format of choice.
     *                 However, an access policy (in arbitrary format) can be requested using this command. If the
     *                 device supports access policy settings based on WS-Security authentication, then the device
     *                 shall support this command.
     *             
     */
    @WebMethod(operationName = "GetAccessPolicy", action = "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy")
    @RequestWrapper(localName = "GetAccessPolicy", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetAccessPolicy")
    @ResponseWrapper(localName = "GetAccessPolicyResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetAccessPolicyResponse")
    @WebResult(name = "PolicyFile", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public BinaryData getAccessPolicy()
;

    /**
     * This operation is used to retrieve URIs from which system information may be downloaded
     *                 using HTTP. URIs may be returned for the following system information:
     *                 
     *                 System Logs. Multiple system logs may be returned, of different types. The exact format of
     *                 the system logs is outside the scope of this specification.
     *                 
     *                 Support Information. This consists of arbitrary device diagnostics information from a device.
     *                 The exact format of the diagnostic information is outside the scope of this specification.
     *                 
     *                 System Backup. The received file is a backup file that can be used to restore the current
     *                 device configuration at a later date. The exact format of the backup configuration file is
     *                 outside the scope of this specification.
     *                 
     *                 If the device allows retrieval of system logs, support information or system backup data, it
     *                 should make them available via HTTP GET. If it does, it shall support the GetSystemUris
     *                 command.
     *             
     */
    @WebMethod(operationName = "GetSystemUris", action = "http://www.onvif.org/ver10/device/wsdl/GetSystemUris")
    @RequestWrapper(localName = "GetSystemUris", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetSystemUris")
    @ResponseWrapper(localName = "GetSystemUrisResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetSystemUrisResponse")
    public void getSystemUris(

        @WebParam(mode = WebParam.Mode.OUT, name = "SystemLogUris", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<SystemLogUriList> systemLogUris,
        @WebParam(mode = WebParam.Mode.OUT, name = "SupportInfoUri", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.String> supportInfoUri,
        @WebParam(mode = WebParam.Mode.OUT, name = "SystemBackupUri", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.String> systemBackupUri,
        @WebParam(mode = WebParam.Mode.OUT, name = "Extension", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<GetSystemUrisResponse.Extension> extension
    );

    @WebMethod(operationName = "LoadCertificates", action = "http://www.onvif.org/ver10/device/wsdl/LoadCertificates")
    @RequestWrapper(localName = "LoadCertificates", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.LoadCertificates")
    @ResponseWrapper(localName = "LoadCertificatesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.LoadCertificatesResponse")
    public void loadCertificates(

        @WebParam(name = "NVTCertificate", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<Certificate> nvtCertificate
    );

    @WebMethod(operationName = "GetCertificates", action = "http://www.onvif.org/ver10/device/wsdl/GetCertificates")
    @RequestWrapper(localName = "GetCertificates", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetCertificates")
    @ResponseWrapper(localName = "GetCertificatesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetCertificatesResponse")
    @WebResult(name = "NvtCertificate", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.util.List<Certificate> getCertificates()
;

    /**
     * This operation gets basic device information from the device.
     */
    @WebMethod(operationName = "GetDeviceInformation", action = "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation")
    @RequestWrapper(localName = "GetDeviceInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDeviceInformation")
    @ResponseWrapper(localName = "GetDeviceInformationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDeviceInformationResponse")
    public void getDeviceInformation(

        @WebParam(mode = WebParam.Mode.OUT, name = "Manufacturer", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.String> manufacturer,
        @WebParam(mode = WebParam.Mode.OUT, name = "Model", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.String> model,
        @WebParam(mode = WebParam.Mode.OUT, name = "FirmwareVersion", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.String> firmwareVersion,
        @WebParam(mode = WebParam.Mode.OUT, name = "SerialNumber", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.String> serialNumber,
        @WebParam(mode = WebParam.Mode.OUT, name = "HardwareId", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.String> hardwareId
    );

    /**
     * This method allows retrieval of all the available parameters and their valid ranges for
     *                 the authentication failure warning configuration.
     *             
     */
    @WebMethod(operationName = "GetAuthFailureWarningOptions", action = "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningOptions")
    @RequestWrapper(localName = "GetAuthFailureWarningOptions", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetAuthFailureWarningOptions")
    @ResponseWrapper(localName = "GetAuthFailureWarningOptionsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetAuthFailureWarningOptionsResponse")
    public void getAuthFailureWarningOptions(

        @WebParam(mode = WebParam.Mode.OUT, name = "MonitorPeriodRange", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<IntRange> monitorPeriodRange,
        @WebParam(mode = WebParam.Mode.OUT, name = "AuthFailureRange", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<IntRange> authFailureRange
    );

    /**
     * This operation requests the scope parameters of a device. The scope parameters are used
     *                 in
     *                 the device discovery to match a probe message, see Section 7. The Scope parameters are of
     *                 two different types:
     *                 
     *                 Fixed scope parameters are permanent device characteristics and cannot be removed through the device
     *                 management interface.
     *                 The scope type is indicated in the scope list returned in the get scope parameters response. A device
     *                 shall support
     *                 retrieval of discovery scope parameters through the GetScopes command. As some scope parameters are
     *                 mandatory,
     *                 the device shall return a non-empty scope list in the response.
     *             
     */
    @WebMethod(operationName = "GetScopes", action = "http://www.onvif.org/ver10/device/wsdl/GetScopes")
    @RequestWrapper(localName = "GetScopes", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetScopes")
    @ResponseWrapper(localName = "GetScopesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetScopesResponse")
    @WebResult(name = "Scopes", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.util.List<Scope> getScopes()
;

    /**
     * This method allows retrieval of the current password history configuration settings.
     *             
     */
    @WebMethod(operationName = "GetPasswordHistoryConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/GetPasswordHistoryConfiguration")
    @RequestWrapper(localName = "GetPasswordHistoryConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetPasswordHistoryConfiguration")
    @ResponseWrapper(localName = "GetPasswordHistoryConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetPasswordHistoryConfigurationResponse")
    public void getPasswordHistoryConfiguration(

        @WebParam(mode = WebParam.Mode.OUT, name = "Enabled", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.Boolean> enabled,
        @WebParam(mode = WebParam.Mode.OUT, name = "Length", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.Integer> length
    );

    /**
     * This operation sets the remote user. A device supporting remote user handling shall
     *                 support this
     *                 operation. The user is only valid for the WS-UserToken profile or as a HTTP / RTSP user.
     *                 
     *                 The password that is set shall always be the original (not derived) password.
     *                 
     *                 If UseDerivedPassword is set password derivation shall be done by the device when connecting to a
     *                 remote device.The algorithm to use for deriving the password is described in section 5.12.2.1 of the
     *                 core specification.
     *                 
     *                 To remove the remote user SetRemoteUser should be called without the RemoteUser parameter.
     *             
     */
    @WebMethod(operationName = "SetRemoteUser", action = "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser")
    @RequestWrapper(localName = "SetRemoteUser", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetRemoteUser")
    @ResponseWrapper(localName = "SetRemoteUserResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetRemoteUserResponse")
    public void setRemoteUser(

        @WebParam(name = "RemoteUser", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        RemoteUser remoteUser
    );

    /**
     * This operation modifies an existing Storage configuration.
     *             
     */
    @WebMethod(operationName = "SetStorageConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration")
    @RequestWrapper(localName = "SetStorageConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetStorageConfiguration")
    @ResponseWrapper(localName = "SetStorageConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetStorageConfigurationResponse")
    public void setStorageConfiguration(

        @WebParam(name = "StorageConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        StorageConfiguration storageConfiguration
    );

    /**
     * This operation reloads the parameters on the device to their factory default values.
     *             
     */
    @WebMethod(operationName = "SetSystemFactoryDefault", action = "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault")
    @RequestWrapper(localName = "SetSystemFactoryDefault", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetSystemFactoryDefault")
    @ResponseWrapper(localName = "SetSystemFactoryDefaultResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetSystemFactoryDefaultResponse")
    public void setSystemFactoryDefault(

        @WebParam(name = "FactoryDefault", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        FactoryDefaultType factoryDefault
    );

    /**
     * This operation deletes users on a device. The device shall support deletion of device
     *                 users and their credentials
     *                 through the DeleteUsers command. A device may have one or more fixed users
     *                 that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a
     *                 fault message shall be returned and no users be deleted.
     *             
     */
    @WebMethod(operationName = "DeleteUsers", action = "http://www.onvif.org/ver10/device/wsdl/DeleteUsers")
    @RequestWrapper(localName = "DeleteUsers", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.DeleteUsers")
    @ResponseWrapper(localName = "DeleteUsersResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.DeleteUsersResponse")
    public void deleteUsers(

        @WebParam(name = "Username", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<java.lang.String> username
    );

    /**
     * This operation upgrades a device firmware version. After a successful upgrade the
     *                 response
     *                 message is sent before the device reboots. The device should support firmware upgrade
     *                 through the UpgradeSystemFirmware command. The exact format of the firmware data is
     *                 outside the scope of this standard.
     *             
     */
    @WebMethod(operationName = "UpgradeSystemFirmware", action = "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware")
    @RequestWrapper(localName = "UpgradeSystemFirmware", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.UpgradeSystemFirmware")
    @ResponseWrapper(localName = "UpgradeSystemFirmwareResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.UpgradeSystemFirmwareResponse")
    @WebResult(name = "Message", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.lang.String upgradeSystemFirmware(

        @WebParam(name = "Firmware", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        AttachmentData firmware
    );

    /**
     * This operation adds new configurable scope parameters to a device. The scope parameters
     *                 are used in the device discovery to match a probe message. The device shall
     *                 support addition of discovery scope parameters through the AddScopes command.
     *             
     */
    @WebMethod(operationName = "AddScopes", action = "http://www.onvif.org/ver10/device/wsdl/AddScopes")
    @RequestWrapper(localName = "AddScopes", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.AddScopes")
    @ResponseWrapper(localName = "AddScopesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.AddScopesResponse")
    public void addScopes(

        @WebParam(name = "ScopeItem", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<java.lang.String> scopeItem
    );

    /**
     * This operation sets the settings of a relay output.
     *                 This method has been depricated with version 2.0. Refer to the DeviceIO service.
     *             
     */
    @WebMethod(operationName = "SetRelayOutputSettings", action = "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings")
    @RequestWrapper(localName = "SetRelayOutputSettings", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetRelayOutputSettings")
    @ResponseWrapper(localName = "SetRelayOutputSettingsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetRelayOutputSettingsResponse")
    public void setRelayOutputSettings(

        @WebParam(name = "RelayOutputToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String relayOutputToken,
        @WebParam(name = "Properties", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        RelayOutputSettings properties
    );

    /**
     * Manage auxiliary commands supported by a device, such as controlling an Infrared (IR)
     *                 lamp,
     *                 a heater or a wiper or a thermometer that is connected to the device.
     *                 
     *                 The supported commands can be retrieved via the AuxiliaryCommands capability.
     *                 
     *                 Although the name of the auxiliary commands can be freely defined, commands starting with the prefix tt:
     *                 are
     *                 reserved to define frequently used commands and these reserved commands shall all share the
     *                 "tt:command|parameter" syntax.
     *                 
     *                 A device that indicates auxiliary service capability shall support this command.
     *             
     */
    @WebMethod(operationName = "SendAuxiliaryCommand", action = "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand")
    @RequestWrapper(localName = "SendAuxiliaryCommand", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SendAuxiliaryCommand")
    @ResponseWrapper(localName = "SendAuxiliaryCommandResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SendAuxiliaryCommandResponse")
    @WebResult(name = "AuxiliaryCommandResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.lang.String sendAuxiliaryCommand(

        @WebParam(name = "AuxiliaryCommand", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String auxiliaryCommand
    );

    @WebMethod(operationName = "GetCertificatesStatus", action = "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus")
    @RequestWrapper(localName = "GetCertificatesStatus", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetCertificatesStatus")
    @ResponseWrapper(localName = "GetCertificatesStatusResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetCertificatesStatusResponse")
    @WebResult(name = "CertificateStatus", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.util.List<CertificateStatus> getCertificatesStatus()
;

    @WebMethod(operationName = "GetPkcs10Request", action = "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request")
    @RequestWrapper(localName = "GetPkcs10Request", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetPkcs10Request")
    @ResponseWrapper(localName = "GetPkcs10RequestResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetPkcs10RequestResponse")
    @WebResult(name = "Pkcs10Request", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public BinaryData getPkcs10Request(

        @WebParam(name = "CertificateID", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String certificateID,
        @WebParam(name = "Subject", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String subject,
        @WebParam(name = "Attributes", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        BinaryData attributes
    );

    /**
     * This operation lists all existing storage configurations for the device.
     *             
     */
    @WebMethod(operationName = "GetStorageConfigurations", action = "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations")
    @RequestWrapper(localName = "GetStorageConfigurations", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetStorageConfigurations")
    @ResponseWrapper(localName = "GetStorageConfigurationsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetStorageConfigurationsResponse")
    @WebResult(name = "StorageConfigurations", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.util.List<StorageConfiguration> getStorageConfigurations()
;

    /**
     * This operation gets a system log from the device. The exact format of the system logs is
     *                 outside the scope of this standard.
     *             
     */
    @WebMethod(operationName = "GetSystemLog", action = "http://www.onvif.org/ver10/device/wsdl/GetSystemLog")
    @RequestWrapper(localName = "GetSystemLog", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetSystemLog")
    @ResponseWrapper(localName = "GetSystemLogResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetSystemLogResponse")
    @WebResult(name = "SystemLog", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public SystemLog getSystemLog(

        @WebParam(name = "LogType", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        SystemLogType logType
    );

    /**
     * This operation gets the remote DP address or addresses from a device. If the device
     *                 supports
     *                 remote discovery, as specified in Section 7.4, the device shall support retrieval of the remote
     *                 DP address(es) through the GetDPAddresses command.
     *             
     */
    @WebMethod(operationName = "GetDPAddresses", action = "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses")
    @RequestWrapper(localName = "GetDPAddresses", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDPAddresses")
    @ResponseWrapper(localName = "GetDPAddressesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDPAddressesResponse")
    @WebResult(name = "DPAddress", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.util.List<NetworkHost> getDPAddresses()
;

    /**
     * This operation restores the system backup configuration files(s) previously retrieved
     *                 from a
     *                 device. The device should support restore of backup configuration file(s) through the
     *                 RestoreSystem command. The exact format of the backup configuration file(s) is outside the
     *                 scope of this standard. If the command is supported, it shall accept backup files returned by
     *                 the GetSystemBackup command.
     *             
     */
    @WebMethod(operationName = "RestoreSystem", action = "http://www.onvif.org/ver10/device/wsdl/RestoreSystem")
    @RequestWrapper(localName = "RestoreSystem", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.RestoreSystem")
    @ResponseWrapper(localName = "RestoreSystemResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.RestoreSystemResponse")
    public void restoreSystem(

        @WebParam(name = "BackupFiles", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<BackupFile> backupFiles
    );

    /**
     * This operation gets the remote discovery mode of a device. See Section 7.4 for the
     *                 definition
     *                 of remote discovery extensions. A device that supports remote discovery shall support
     *                 retrieval of the remote discovery mode setting through the GetRemoteDiscoveryMode
     *                 command.
     *             
     */
    @WebMethod(operationName = "GetRemoteDiscoveryMode", action = "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode")
    @RequestWrapper(localName = "GetRemoteDiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetRemoteDiscoveryMode")
    @ResponseWrapper(localName = "GetRemoteDiscoveryModeResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetRemoteDiscoveryModeResponse")
    @WebResult(name = "RemoteDiscoveryMode", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public DiscoveryMode getRemoteDiscoveryMode()
;

    @WebMethod(operationName = "GetCertificateInformation", action = "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation")
    @RequestWrapper(localName = "GetCertificateInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetCertificateInformation")
    @ResponseWrapper(localName = "GetCertificateInformationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetCertificateInformationResponse")
    @WebResult(name = "CertificateInformation", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public CertificateInformation getCertificateInformation(

        @WebParam(name = "CertificateID", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String certificateID
    );

    /**
     * This method allows setting of the password history configuration.
     */
    @WebMethod(operationName = "SetPasswordHistoryConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/SetPasswordHistoryConfiguration")
    @RequestWrapper(localName = "SetPasswordHistoryConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetPasswordHistoryConfiguration")
    @ResponseWrapper(localName = "SetPasswordHistoryConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetPasswordHistoryConfigurationResponse")
    public void setPasswordHistoryConfiguration(

        @WebParam(name = "Enabled", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean enabled,
        @WebParam(name = "Length", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        int length
    );

    /**
     * This operation lists the registered users and corresponding credentials on a device. The
     *                 device shall support retrieval of registered device users and their credentials for the user
     *                 token through the GetUsers command.
     *             
     */
    @WebMethod(operationName = "GetUsers", action = "http://www.onvif.org/ver10/device/wsdl/GetUsers")
    @RequestWrapper(localName = "GetUsers", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetUsers")
    @ResponseWrapper(localName = "GetUsersResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetUsersResponse")
    @WebResult(name = "User", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.util.List<User> getUsers()
;

    /**
     * This method allows retrieval of all the available parameters and their valid ranges for
     *                 the password complexity configuration.
     *             
     */
    @WebMethod(operationName = "GetPasswordComplexityOptions", action = "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityOptions")
    @RequestWrapper(localName = "GetPasswordComplexityOptions", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetPasswordComplexityOptions")
    @ResponseWrapper(localName = "GetPasswordComplexityOptionsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetPasswordComplexityOptionsResponse")
    public void getPasswordComplexityOptions(

        @WebParam(mode = WebParam.Mode.OUT, name = "MinLenRange", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<IntRange> minLenRange,
        @WebParam(mode = WebParam.Mode.OUT, name = "UppercaseRange", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<IntRange> uppercaseRange,
        @WebParam(mode = WebParam.Mode.OUT, name = "NumberRange", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<IntRange> numberRange,
        @WebParam(mode = WebParam.Mode.OUT, name = "SpecialCharsRange", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<IntRange> specialCharsRange,
        @WebParam(mode = WebParam.Mode.OUT, name = "BlockUsernameOccurrenceSupported", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.Boolean> blockUsernameOccurrenceSupported,
        @WebParam(mode = WebParam.Mode.OUT, name = "PolicyConfigurationLockSupported", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.ws.Holder<java.lang.Boolean> policyConfigurationLockSupported
    );

    @WebMethod(operationName = "DeleteDot1XConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration")
    @RequestWrapper(localName = "DeleteDot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.DeleteDot1XConfiguration")
    @ResponseWrapper(localName = "DeleteDot1XConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.DeleteDot1XConfigurationResponse")
    public void deleteDot1XConfiguration(

        @WebParam(name = "Dot1XConfigurationToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<java.lang.String> dot1XConfigurationToken
    );

    /**
     * This operation gets a list of all available relay outputs and their settings.
     *                 
     *                 This method has been depricated with version 2.0. Refer to the DeviceIO service.
     *             
     */
    @WebMethod(operationName = "GetRelayOutputs", action = "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs")
    @RequestWrapper(localName = "GetRelayOutputs", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetRelayOutputs")
    @ResponseWrapper(localName = "GetRelayOutputsResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetRelayOutputsResponse")
    @WebResult(name = "RelayOutputs", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.util.List<RelayOutput> getRelayOutputs()
;

    @WebMethod(operationName = "LoadCACertificates", action = "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates")
    @RequestWrapper(localName = "LoadCACertificates", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.LoadCACertificates")
    @ResponseWrapper(localName = "LoadCACertificatesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.LoadCACertificatesResponse")
    public void loadCACertificates(

        @WebParam(name = "CACertificate", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<Certificate> caCertificate
    );

    @WebMethod(operationName = "GetDot1XConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration")
    @RequestWrapper(localName = "GetDot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDot1XConfiguration")
    @ResponseWrapper(localName = "GetDot1XConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetDot1XConfigurationResponse")
    @WebResult(name = "Dot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public Dot1XConfiguration getDot1XConfiguration(

        @WebParam(name = "Dot1XConfigurationToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String dot1XConfigurationToken
    );

    @WebMethod(operationName = "SetDot1XConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration")
    @RequestWrapper(localName = "SetDot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetDot1XConfiguration")
    @ResponseWrapper(localName = "SetDot1XConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetDot1XConfigurationResponse")
    public void setDot1XConfiguration(

        @WebParam(name = "Dot1XConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        Dot1XConfiguration dot1XConfiguration
    );

    /**
     * This operation creates a new storage configuration.
     * The configuration data shall be created in the device and shall be persistent (remain after reboot).
     *             
     */
    @WebMethod(operationName = "CreateStorageConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration")
    @RequestWrapper(localName = "CreateStorageConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.CreateStorageConfiguration")
    @ResponseWrapper(localName = "CreateStorageConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.CreateStorageConfigurationResponse")
    @WebResult(name = "Token", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.lang.String createStorageConfiguration(

        @WebParam(name = "StorageConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        StorageConfigurationData storageConfiguration
    );

    /**
     * This method allows setting of the authentication failure warning configuration.
     *             
     */
    @WebMethod(operationName = "SetAuthFailureWarningConfiguration", action = "http://www.onvif.org/ver10/device/wsdl/SetAuthFailureWarningConfiguration")
    @RequestWrapper(localName = "SetAuthFailureWarningConfiguration", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetAuthFailureWarningConfiguration")
    @ResponseWrapper(localName = "SetAuthFailureWarningConfigurationResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetAuthFailureWarningConfigurationResponse")
    public void setAuthFailureWarningConfiguration(

        @WebParam(name = "Enabled", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        boolean enabled,
        @WebParam(name = "MonitorPeriod", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        int monitorPeriod,
        @WebParam(name = "MaxAuthFailures", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        int maxAuthFailures
    );

    /**
     * This operation sets the hashing algorithm(s) used in HTTP and RTSP Digest Authentication.
     *             
     */
    @WebMethod(operationName = "SetHashingAlgorithm", action = "http://www.onvif.org/ver10/device/wsdl/SetHashingAlgorithm")
    @RequestWrapper(localName = "SetHashingAlgorithm", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetHashingAlgorithm")
    @ResponseWrapper(localName = "SetHashingAlgorithmResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetHashingAlgorithmResponse")
    public void setHashingAlgorithm(

        @WebParam(name = "Algorithm", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<java.lang.String> algorithm
    );

    /**
     * This operation returns a lists of the wireless networks in range of the device. A device
     *                 should
     *                 support this operation.
     *             
     */
    @WebMethod(operationName = "ScanAvailableDot11Networks", action = "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks")
    @RequestWrapper(localName = "ScanAvailableDot11Networks", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.ScanAvailableDot11Networks")
    @ResponseWrapper(localName = "ScanAvailableDot11NetworksResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.ScanAvailableDot11NetworksResponse")
    @WebResult(name = "Networks", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.util.List<Dot11AvailableNetworks> scanAvailableDot11Networks(

        @WebParam(name = "InterfaceToken", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String interfaceToken
    );

    /**
     * This command sets the device access security policy (for more details on the access
     *                 security
     *                 policy see the Get command). If the device supports access policy settings
     *                 based on WS-Security authentication, then the device shall support this command.
     *             
     */
    @WebMethod(operationName = "SetAccessPolicy", action = "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy")
    @RequestWrapper(localName = "SetAccessPolicy", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetAccessPolicy")
    @ResponseWrapper(localName = "SetAccessPolicyResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetAccessPolicyResponse")
    public void setAccessPolicy(

        @WebParam(name = "PolicyFile", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        BinaryData policyFile
    );

    @WebMethod(operationName = "DeleteCertificates", action = "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates")
    @RequestWrapper(localName = "DeleteCertificates", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.DeleteCertificates")
    @ResponseWrapper(localName = "DeleteCertificatesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.DeleteCertificatesResponse")
    public void deleteCertificates(

        @WebParam(name = "CertificateID", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<java.lang.String> certificateID
    );

    /**
     * This operation returns the IEEE802.11 capabilities. The device shall support
     *                 this operation.
     *             
     */
    @WebMethod(operationName = "GetDot11Capabilities", action = "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetDot11CapabilitiesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", partName = "parameters")
    public GetDot11CapabilitiesResponse getDot11Capabilities(

        @WebParam(partName = "parameters", name = "GetDot11Capabilities", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        GetDot11Capabilities parameters
    );

    /**
     * A client can ask for the device service endpoint reference address property that can be
     *                 used
     *                 to derive the password equivalent for remote user operation. The device shall support the
     *                 GetEndpointReference command returning the address property of the device service
     *                 endpoint reference.
     *             
     */
    @WebMethod(operationName = "GetEndpointReference", action = "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetEndpointReferenceResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", partName = "parameters")
    public GetEndpointReferenceResponse getEndpointReference(

        @WebParam(partName = "parameters", name = "GetEndpointReference", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        GetEndpointReference parameters
    );

    @WebMethod(operationName = "SetCertificatesStatus", action = "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus")
    @RequestWrapper(localName = "SetCertificatesStatus", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetCertificatesStatus")
    @ResponseWrapper(localName = "SetCertificatesStatusResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetCertificatesStatusResponse")
    public void setCertificatesStatus(

        @WebParam(name = "CertificateStatus", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.util.List<CertificateStatus> certificateStatus
    );

    /**
     * This operation sets the dynamic DNS settings on a device. If the device supports dynamic
     *                 DNS as specified in [RFC 2136] and [RFC 4702], it shall be possible to set the type, name
     *                 and TTL through the SetDynamicDNS command.
     *             
     */
    @WebMethod(operationName = "SetDynamicDNS", action = "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS")
    @RequestWrapper(localName = "SetDynamicDNS", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetDynamicDNS")
    @ResponseWrapper(localName = "SetDynamicDNSResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.SetDynamicDNSResponse")
    public void setDynamicDNS(

        @WebParam(name = "Type", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        DynamicDNSType type,
        @WebParam(name = "Name", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        java.lang.String name,
        @WebParam(name = "TTL", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
        javax.xml.datatype.Duration ttl
    );

    /**
     * This operation is retrieves system backup configuration file(s) from a device. The
     *                 device
     *                 should support return of back up configuration file(s) through the GetSystemBackup command.
     *                 The backup is returned with reference to a name and mime-type together with binary data.
     *                 The exact format of the backup configuration files is outside the scope of this standard.
     *             
     */
    @WebMethod(operationName = "GetSystemBackup", action = "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup")
    @RequestWrapper(localName = "GetSystemBackup", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetSystemBackup")
    @ResponseWrapper(localName = "GetSystemBackupResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetSystemBackupResponse")
    @WebResult(name = "BackupFiles", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.util.List<BackupFile> getSystemBackup()
;

    @WebMethod(operationName = "GetCACertificates", action = "http://www.onvif.org/ver10/device/wsdl/GetCACertificates")
    @RequestWrapper(localName = "GetCACertificates", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetCACertificates")
    @ResponseWrapper(localName = "GetCACertificatesResponse", targetNamespace = "http://www.onvif.org/ver10/device/wsdl", className = "com.it.sim.webservice.onvif.client.GetCACertificatesResponse")
    @WebResult(name = "CACertificate", targetNamespace = "http://www.onvif.org/ver10/device/wsdl")
    public java.util.List<Certificate> getCACertificates()
;
}
