package com.it.sim.webservice.jdk2.client;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@SuppressWarnings({"SpellCheckingInspection", "HttpUrlsUsage"})
@WebServiceClient(name = "helloService", targetNamespace = "http://it.com", wsdlLocation = "http://localhost:49002/service/EvalService?wsdl")
public class HelloService extends Service {

    private final static URL HELLOSERVICE1_WSDL_LOCATION;
    private final static WebServiceException HELLOSERVICE1_EXCEPTION;
    private final static QName HELLOSERVICE1_QNAME = new QName("http://it.com", "helloService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:49002/service/EvalService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        HELLOSERVICE1_WSDL_LOCATION = url;
        HELLOSERVICE1_EXCEPTION = e;
    }

    public HelloService() {
        super(__getWsdlLocation(), HELLOSERVICE1_QNAME);
    }

    public HelloService(WebServiceFeature... features) {
        super(__getWsdlLocation(), HELLOSERVICE1_QNAME, features);
    }

    public HelloService(URL wsdlLocation) {
        super(wsdlLocation, HELLOSERVICE1_QNAME);
    }

    public HelloService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, HELLOSERVICE1_QNAME, features);
    }

    public HelloService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HelloService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns IHelloService
     */
    @WebEndpoint(name = "helloServicePort")
    public IHelloService getHelloServicePort1() {
        return super.getPort(new QName("http://it.com", "helloServicePort"), IHelloService.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns IHelloService
     */
    @WebEndpoint(name = "helloServicePort")
    public IHelloService getHelloServicePort1(WebServiceFeature... features) {
        return super.getPort(new QName("http://it.com", "helloServicePort"), IHelloService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (HELLOSERVICE1_EXCEPTION != null) {
            throw HELLOSERVICE1_EXCEPTION;
        }
        return HELLOSERVICE1_WSDL_LOCATION;
    }

}
